{"ast":null,"code":"var _jsxFileName = \"/Users/gojieun/Desktop/meong/prepare/front/pages/map.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { END } from 'redux-saga';\nimport { LOAD_MY_INFO_REQUEST, SIGN_UP_REQUEST } from '../reducers/user';\nimport wrapper from '../store/configureStore';\nimport Head from 'next/head';\nimport AppLayout from '../components/AppLayout';\n\nconst Map = () => {\n  const {\n    0: info,\n    1: setInfo\n  } = useState();\n  const {\n    0: markers,\n    1: setMarkers\n  } = useState([]);\n  const {\n    0: map,\n    1: setMap\n  } = useState();\n  useEffect(() => {\n    if (!map) return;\n    const ps = new kakao.maps.services.Places();\n    ps.keywordSearch(\"이태원 맛집\", (data, status, _pagination) => {\n      if (status === kakao.maps.services.Status.OK) {\n        // 검색된 장소 위치를 기준으로 지도 범위를 재설정하기위해\n        // LatLngBounds 객체에 좌표를 추가합니다\n        const bounds = new kakao.maps.LatLngBounds();\n        let markers = [];\n\n        for (var i = 0; i < data.length; i++) {\n          // @ts-ignore\n          markers.push({\n            position: {\n              lat: data[i].y,\n              lng: data[i].x\n            },\n            content: data[i].place_name\n          }); // @ts-ignore\n\n          bounds.extend(new kakao.maps.LatLng(data[i].y, data[i].x));\n        }\n\n        setMarkers(markers); // 검색된 장소 위치를 기준으로 지도 범위를 재설정합니다\n\n        map.setBounds(bounds);\n      }\n    });\n  }, [map]);\n  return __jsx(Map // 로드뷰를 표시할 Container\n  , {\n    center: {\n      lat: 37.566826,\n      lng: 126.9786567\n    },\n    style: {\n      width: \"100%\",\n      height: \"350px\"\n    },\n    level: 3,\n    onCreate: setMap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, markers.map(marker => __jsx(MapMarker, {\n    key: `marker-${marker.content}-${marker.position.lat},${marker.position.lng}`,\n    position: marker.position,\n    onClick: () => setInfo(marker),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, info && info.content === marker.content && __jsx(\"div\", {\n    style: {\n      color: \"#000\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 19\n    }\n  }, marker.content))));\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  console.log('getServerSideProps start');\n  console.log(context.req.headers);\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch(END);\n  console.log('getServerSideProps end');\n  await context.store.sagaTask.toPromise();\n});\nexport default Map;","map":{"version":3,"names":["React","useCallback","useState","useEffect","axios","END","LOAD_MY_INFO_REQUEST","SIGN_UP_REQUEST","wrapper","Head","AppLayout","Map","info","setInfo","markers","setMarkers","map","setMap","ps","kakao","maps","services","Places","keywordSearch","data","status","_pagination","Status","OK","bounds","LatLngBounds","i","length","push","position","lat","y","lng","x","content","place_name","extend","LatLng","setBounds","width","height","marker","color","getServerSideProps","context","console","log","req","headers","cookie","defaults","Cookie","store","dispatch","type","sagaTask","toPromise"],"sources":["/Users/gojieun/Desktop/meong/prepare/front/pages/map.js"],"sourcesContent":["import React, { useCallback, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { END } from 'redux-saga';\nimport { LOAD_MY_INFO_REQUEST, SIGN_UP_REQUEST } from '../reducers/user';\nimport wrapper from '../store/configureStore';\nimport Head from 'next/head';\nimport AppLayout from '../components/AppLayout';\n\n\n\nconst Map = () => {\n\n\n        const [info, setInfo] = useState()\n        const [markers, setMarkers] = useState([])\n        const [map, setMap] = useState()\n      \n        useEffect(() => {\n          if (!map) return\n          const ps = new kakao.maps.services.Places()\n      \n          ps.keywordSearch(\"이태원 맛집\", (data, status, _pagination) => {\n            if (status === kakao.maps.services.Status.OK) {\n              // 검색된 장소 위치를 기준으로 지도 범위를 재설정하기위해\n              // LatLngBounds 객체에 좌표를 추가합니다\n              const bounds = new kakao.maps.LatLngBounds()\n              let markers = []\n      \n              for (var i = 0; i < data.length; i++) {\n                // @ts-ignore\n                markers.push({\n                  position: {\n                    lat: data[i].y,\n                    lng: data[i].x,\n                  },\n                  content: data[i].place_name,\n                })\n                // @ts-ignore\n                bounds.extend(new kakao.maps.LatLng(data[i].y, data[i].x))\n              }\n              setMarkers(markers)\n      \n              // 검색된 장소 위치를 기준으로 지도 범위를 재설정합니다\n              map.setBounds(bounds)\n            }\n          })\n        }, [map])\n      \n        return (\n          <Map // 로드뷰를 표시할 Container\n            center={{\n              lat: 37.566826,\n              lng: 126.9786567,\n            }}\n            style={{\n              width: \"100%\",\n              height: \"350px\",\n            }}\n            level={3}\n            onCreate={setMap}\n          >\n            {markers.map((marker) => (\n              <MapMarker\n                key={`marker-${marker.content}-${marker.position.lat},${marker.position.lng}`}\n                position={marker.position}\n                onClick={() => setInfo(marker)}\n              >\n                {info &&info.content === marker.content && (\n                  <div style={{color:\"#000\"}}>{marker.content}</div>\n                )}\n              </MapMarker>\n            ))}\n          </Map>\n    )\n}\n\n\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\n    console.log('getServerSideProps start');\n    console.log(context.req.headers);\n    const cookie = context.req ? context.req.headers.cookie : '';\n    axios.defaults.headers.Cookie = '';\n    if (context.req && cookie) {\n      axios.defaults.headers.Cookie = cookie;\n    }\n    context.store.dispatch({\n      type: LOAD_MY_INFO_REQUEST,\n    });\n    context.store.dispatch(END);\n    console.log('getServerSideProps end');\n    await context.store.sagaTask.toPromise();\n  });\n\nexport default Map;"],"mappings":"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"},"metadata":{},"sourceType":"module"}