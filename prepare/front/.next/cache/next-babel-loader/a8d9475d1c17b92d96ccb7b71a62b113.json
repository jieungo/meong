{"ast":null,"code":"var _jsxFileName = \"/Users/gojieun/Desktop/meong/prepare/front/pages/user/[id].js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Avatar, Card } from 'antd';\nimport { END } from 'redux-saga';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\nimport axios from 'axios';\nimport { LOAD_USER_POSTS_REQUEST } from '../../reducers/post';\nimport { LOAD_MY_INFO_REQUEST, LOAD_USER_REQUEST } from '../../reducers/user';\nimport PostCard from '../../components/PostCard';\nimport wrapper from '../../store/configureStore';\nimport AppLayout from '../../components/AppLayout';\n\nconst User = () => {\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const {\n    mainPosts,\n    hasMorePosts,\n    loadUserPostsLoading\n  } = useSelector(state => state.post);\n  const {\n    userInfo\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    const onScroll = () => {\n      if (window.pageYOffset + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePosts && !loadUserPostsLoading) {\n          dispatch({\n            type: LOAD_USER_POSTS_REQUEST,\n            lastId: mainPosts[mainPosts.length - 1] && mainPosts[mainPosts.length - 1].id,\n            data: id\n          });\n        }\n      }\n    };\n\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [mainPosts.length, hasMorePosts, id]);\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, userInfo && __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, userInfo.nickname, \"\\uB2D8\\uC758 \\uAE00\"), __jsx(\"meta\", {\n    name: \"description\",\n    content: `${userInfo.nickname}님의 게시글`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:title\",\n    content: `${userInfo.nickname}님의 게시글`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:description\",\n    content: `${userInfo.nickname}님의 게시글`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:image\",\n    content: \"https://nodebird.com/favicon.ico\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:url\",\n    content: `https://nodebird.com/user/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  })), userInfo ? __jsx(Card, {\n    actions: [__jsx(\"div\", {\n      key: \"twit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }\n    }, \"\\uC9F9\\uC9F9\", __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }), userInfo.Posts), __jsx(\"div\", {\n      key: \"following\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }\n    }, \"\\uD314\\uB85C\\uC789\", __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }), userInfo.Followings), __jsx(\"div\", {\n      key: \"follower\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    }, \"\\uD314\\uB85C\\uC6CC\", __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }), userInfo.Followers)],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 23\n      }\n    }, userInfo.nickname[0]),\n    title: userInfo.nickname,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  })) : null, mainPosts.map(post => __jsx(PostCard, {\n    key: post.id,\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 32\n    }\n  })));\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_USER_POSTS_REQUEST,\n    data: context.params.id\n  });\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch({\n    type: LOAD_USER_REQUEST,\n    data: context.params.id\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n  console.log('getState', context.store.getState().post.mainPosts);\n  return {\n    props: {}\n  };\n});\nexport default User;","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","Avatar","Card","END","Head","useRouter","axios","LOAD_USER_POSTS_REQUEST","LOAD_MY_INFO_REQUEST","LOAD_USER_REQUEST","PostCard","wrapper","AppLayout","User","dispatch","router","id","query","mainPosts","hasMorePosts","loadUserPostsLoading","state","post","userInfo","user","onScroll","window","pageYOffset","document","documentElement","clientHeight","scrollHeight","type","lastId","length","data","addEventListener","removeEventListener","nickname","Posts","Followings","Followers","map","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","params","sagaTask","toPromise","console","log","getState","props"],"sources":["/Users/gojieun/Desktop/meong/prepare/front/pages/user/[id].js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Avatar, Card } from 'antd';\nimport { END } from 'redux-saga';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\n\nimport axios from 'axios';\nimport { LOAD_USER_POSTS_REQUEST } from '../../reducers/post';\nimport { LOAD_MY_INFO_REQUEST, LOAD_USER_REQUEST } from '../../reducers/user';\nimport PostCard from '../../components/PostCard';\nimport wrapper from '../../store/configureStore';\nimport AppLayout from '../../components/AppLayout';\n\nconst User = () => {\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const { id } = router.query;\n  const { mainPosts, hasMorePosts, loadUserPostsLoading } = useSelector((state) => state.post);\n  const { userInfo } = useSelector((state) => state.user);\n\n  useEffect(() => {\n    const onScroll = () => {\n      if (window.pageYOffset + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePosts && !loadUserPostsLoading) {\n          dispatch({\n            type: LOAD_USER_POSTS_REQUEST,\n            lastId: mainPosts[mainPosts.length - 1] && mainPosts[mainPosts.length - 1].id,\n            data: id,\n          });\n        }\n      }\n    };\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [mainPosts.length, hasMorePosts, id]);\n\n  return (\n    <AppLayout>\n      {userInfo && (\n        <Head>\n          <title>\n            {userInfo.nickname}\n            님의 글\n          </title>\n          <meta name=\"description\" content={`${userInfo.nickname}님의 게시글`} />\n          <meta property=\"og:title\" content={`${userInfo.nickname}님의 게시글`} />\n          <meta property=\"og:description\" content={`${userInfo.nickname}님의 게시글`} />\n          <meta property=\"og:image\" content=\"https://nodebird.com/favicon.ico\" />\n          <meta property=\"og:url\" content={`https://nodebird.com/user/${id}`} />\n        </Head>\n      )}\n      {userInfo\n        ? (\n          <Card\n            actions={[\n              <div key=\"twit\">\n                짹짹\n                <br />\n                {userInfo.Posts}\n              </div>,\n              <div key=\"following\">\n                팔로잉\n                <br />\n                {userInfo.Followings}\n              </div>,\n              <div key=\"follower\">\n                팔로워\n                <br />\n                {userInfo.Followers}\n              </div>,\n            ]}\n          >\n            <Card.Meta\n              avatar={<Avatar>{userInfo.nickname[0]}</Avatar>}\n              title={userInfo.nickname}\n            />\n          </Card>\n        )\n        : null}\n      {mainPosts.map((post) => <PostCard key={post.id} post={post} />)}\n    </AppLayout>\n  );\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n  context.store.dispatch({\n    type: LOAD_USER_POSTS_REQUEST,\n    data: context.params.id,\n  });\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST,\n  });\n  context.store.dispatch({\n    type: LOAD_USER_REQUEST,\n    data: context.params.id,\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n  console.log('getState', context.store.getState().post.mainPosts);\n  return { props: {} };\n});\n\nexport default User;"],"mappings":"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"},"metadata":{},"sourceType":"module"}