{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { Button, Form, Input } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { DownloadOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { ADD_POST_REQUEST, UPLOAD_IMAGES_REQUEST, REMOVE_IMAGE } from '../reducers/post';\nimport useInput from '../hooks/useInput';\nimport { backUrl } from '../config/config';\nconst SubmitBtn = styled(Button).withConfig({\n  displayName: \"PostForm__SubmitBtn\",\n  componentId: \"sc-1s3n0yo-0\"\n})([\"background-color:#FFF3D4;color:#857171;border:none;border-radius:20px;width:20%;height:40px;font-weight:500;position:absolute;right:15px;bottom:15px;&:hover{background-color:#857171;border:1px solid #857171;color:white;}\"]);\nconst FileUploadWrapper = styled.div.withConfig({\n  displayName: \"PostForm__FileUploadWrapper\",\n  componentId: \"sc-1s3n0yo-1\"\n})([\"display:flex;margin-bottom:20px;#file[type=\\\"file\\\"]{display:none;}.label-holder{display:flex;margin:1em auto;width:50%;height:20vh;}.label{display:grid;place-items:center;font-size:1rem;cursor:pointer;border-radius:5px;width:100%;padding:5vh 0;}.label > span{display:flex;flex-direction:column;font-weight:500;font-size:1.1rem;color:gray;}.result{width:100%;margin-top:1rem;display:flex;flex-wrap:wrap;justify-content:left;}\"]);\nconst SelectedImg = styled.img.withConfig({\n  displayName: \"PostForm__SelectedImg\",\n  componentId: \"sc-1s3n0yo-2\"\n})([\"display:flex;align-items:center;justify-content:center;width:100%;\"]);\nconst FormWrapper = styled(Form).withConfig({\n  displayName: \"PostForm__FormWrapper\",\n  componentId: \"sc-1s3n0yo-3\"\n})([\"margin:0 auto;background-color:white;height:45vh;position:relative;border-radius:20px;box-shadow:grey 1px 1px 8px -7px;\"]);\n\nconst PostForm = () => {\n  const {\n    imagePaths,\n    addPostDone\n  } = useSelector(state => state.post);\n  const dispatch = useDispatch();\n  const [text, onChangeText, setText] = useInput('');\n  useEffect(() => {\n    if (addPostDone) {\n      setText('');\n    }\n  }, [addPostDone]);\n  const onSubmit = useCallback(() => {\n    if (!text || !text.trim()) {\n      return alert('게시글을 작성하세요.');\n    }\n\n    const formData = new FormData();\n    imagePaths.forEach(p => {\n      formData.append('image', p);\n    });\n    formData.append('content', text);\n    return dispatch({\n      type: ADD_POST_REQUEST,\n      data: formData\n    });\n  }, [text, imagePaths]);\n  const imageInput = useRef();\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  const onChangeImages = useCallback(e => {\n    console.log('images', e.target.files);\n    const imageFormData = new FormData();\n    [].forEach.call(e.target.files, f => {\n      imageFormData.append('image', f);\n    });\n    dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imageFormData\n    });\n  }, []);\n  const onRemoveImage = useCallback(index => () => {\n    dispatch({\n      type: REMOVE_IMAGE,\n      data: index\n    });\n  }, []);\n  return __jsx(FormWrapper, {\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit\n  }, __jsx(FileUploadWrapper, null, __jsx(\"input\", {\n    type: \"file\",\n    name: \"image\",\n    multiple: true,\n    hidden: true,\n    ref: imageInput,\n    onChange: onChangeImages\n  }), __jsx(\"div\", {\n    className: \"label-holder\",\n    onClick: onClickImageUpload\n  }, __jsx(\"label\", {\n    htmlFor: \"file\",\n    className: \"label\"\n  }, __jsx(\"span\", null, __jsx(DownloadOutlined, {\n    style: {\n      fontSize: '30px',\n      marginBottom: '10px'\n    }\n  }), \"Upload Images\"))), __jsx(\"div\", null, imagePaths.map((v, i) => __jsx(\"div\", {\n    key: v,\n    style: {\n      position: 'relative'\n    }\n  }, __jsx(SelectedImg, {\n    src: v,\n    alt: v,\n    style: {\n      width: '20vw',\n      heigth: '20vh'\n    }\n  }), __jsx(Button, {\n    onClick: onRemoveImage(i),\n    style: {\n      position: 'absolute',\n      zIndex: 1,\n      top: 0,\n      right: 0\n    }\n  }, \"X\"))))), __jsx(Input.TextArea, {\n    value: text,\n    onChange: onChangeText,\n    maxLength: 300,\n    placeholder: \"\\uBC18\\uB824\\uB3D9\\uBB3C\\uC5D0 \\uB300\\uD55C \\uC790\\uC720\\uB85C\\uC6B4 \\uAE00\\uC744 \\uC791\\uC131\\uD574\\uC8FC\\uC138\\uC694\",\n    style: {\n      border: 'none'\n    }\n  }), __jsx(SubmitBtn, {\n    htmlType: \"submit\"\n  }, \"\\uC5C5\\uB85C\\uB4DC\"));\n};\n\nexport default PostForm;","map":{"version":3,"names":["React","useCallback","useEffect","useRef","useState","Button","Form","Input","useDispatch","useSelector","DownloadOutlined","styled","ADD_POST_REQUEST","UPLOAD_IMAGES_REQUEST","REMOVE_IMAGE","useInput","backUrl","SubmitBtn","FileUploadWrapper","div","SelectedImg","img","FormWrapper","PostForm","imagePaths","addPostDone","state","post","dispatch","text","onChangeText","setText","onSubmit","trim","alert","formData","FormData","forEach","p","append","type","data","imageInput","onClickImageUpload","current","click","onChangeImages","e","console","log","target","files","imageFormData","call","f","onRemoveImage","index","fontSize","marginBottom","map","v","i","position","width","heigth","zIndex","top","right","border"],"sources":["/Users/gojieun/Desktop/meong/prepare/front/components/PostForm.js"],"sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { Button, Form, Input } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {DownloadOutlined} from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { ADD_POST_REQUEST, UPLOAD_IMAGES_REQUEST, REMOVE_IMAGE } from '../reducers/post';\nimport useInput from '../hooks/useInput';\nimport { backUrl } from '../config/config';\n\nconst SubmitBtn = styled(Button)`\n    background-color: #FFF3D4;\n    color: #857171;\n    border: none;\n    border-radius: 20px;\n    width: 20%;\n    height: 40px;\n    font-weight: 500;\n    position: absolute;\n    right: 15px;\n    bottom: 15px;\n\n    &:hover {\n        background-color: #857171;\n        border: 1px solid #857171;\n        color: white;\n    }\n`;\n\nconst FileUploadWrapper = styled.div`\n\ndisplay: flex;\nmargin-bottom: 20px;\n\n#file[type=\"file\"] {\n\tdisplay: none;\n}\n\n.label-holder {\n    display: flex;\n    margin: 1em auto;\n    width: 50%;\n    height: 20vh;\n}\n\n.label{\n  display: grid;\n  place-items: center;\n  font-size: 1rem;\n  cursor: pointer;\n  border-radius: 5px;\n  width: 100%;\n  padding: 5vh 0;\n}\n\n.label > span {\n    display: flex;\n    flex-direction: column;\n    font-weight: 500;\n    font-size: 1.1rem;\n    color: gray;\n}\n\n.result{\n  width: 100%;\n  margin-top:1rem;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: left;\n}\n`;\n\nconst SelectedImg = styled.img`\ndisplay: flex;\nalign-items: center;\njustify-content: center;\nwidth: 100%;\n`;\n\nconst FormWrapper = styled(Form)`\n    margin: 0 auto;\n    background-color: white;\n    height: 45vh;\n    position: relative;\n    border-radius: 20px;\n    box-shadow: grey 1px 1px 8px -7px;\n`;\n\n\nconst PostForm = () => {\n  const { imagePaths, addPostDone } = useSelector((state) => state.post);\n  const dispatch = useDispatch();\n  const [text, onChangeText, setText] = useInput('');\n\n  useEffect(() => {\n    if (addPostDone) {\n      setText('');\n    }\n  }, [addPostDone]);\n\n  const onSubmit = useCallback(() => {\n    if (!text || !text.trim()) {\n      return alert('게시글을 작성하세요.');\n    }\n    const formData = new FormData();\n    imagePaths.forEach((p) => {\n      formData.append('image', p);\n    });\n    formData.append('content', text);\n    return dispatch({\n      type: ADD_POST_REQUEST,\n      data: formData,\n    });\n  }, [text, imagePaths]);\n\n  const imageInput = useRef();\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n   \n  }, [imageInput.current]);\n\n  const onChangeImages = useCallback((e) => {\n    console.log('images', e.target.files);\n    const imageFormData = new FormData();\n    [].forEach.call(e.target.files, (f) => {\n      imageFormData.append('image', f);\n    });\n    dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imageFormData,\n    });\n  }, []);\n\n  const onRemoveImage = useCallback((index) => () => {\n    dispatch({\n      type: REMOVE_IMAGE,\n      data: index,\n    });\n  }, []);\n\n  return (\n    <FormWrapper encType=\"multipart/form-data\" onFinish={onSubmit}>\n        <FileUploadWrapper>\n            <input type=\"file\" name=\"image\" multiple hidden ref={imageInput} onChange={onChangeImages} />\n            <div className=\"label-holder\" onClick={onClickImageUpload}>\n                <label htmlFor='file' className='label'>\n                    <span>\n                        <DownloadOutlined style={{fontSize: '30px', marginBottom: '10px'}}/>\n                        Upload Images\n                    </span>\n                </label>\n            </div>\n      <div>\n        {imagePaths.map((v, i) => (\n          <div key={v} style={{position: 'relative'}}>\n            <SelectedImg src={v} alt={v} style={{width: '20vw', heigth: '20vh'}} />\n            <Button onClick={onRemoveImage(i)} style={{position: 'absolute', zIndex: 1, top: 0, right: 0}}>X</Button>\n          </div>\n        ))}\n      </div>\n        </FileUploadWrapper>\n      <Input.TextArea\n        value={text}\n        onChange={onChangeText}\n        maxLength={300}\n        placeholder=\"반려동물에 대한 자유로운 글을 작성해주세요\"\n        style={{border: 'none'}}\n      />\n    <SubmitBtn htmlType=\"submit\">업로드</SubmitBtn>\n    </FormWrapper>\n  );\n};\n\nexport default PostForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}