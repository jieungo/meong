{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useCallback, useEffect } from 'react';\nimport { Button, Form, Input } from 'antd';\nimport useInput from '../hooks/useInput';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\n\nconst CommentForm = ({\n  post\n}) => {\n  const dispatch = useDispatch();\n  const id = useSelector(state => {\n    var _state$user$user;\n\n    return (_state$user$user = state.user.user) === null || _state$user$user === void 0 ? void 0 : _state$user$user.id;\n  });\n  const {\n    addCommentDone\n  } = useSelector(state => state.post);\n  useEffect(() => {\n    if (addCommentDone) {\n      setCommentText('');\n    }\n  }, [addCommentDone]);\n  const [commentText, onChangeCommentText, setCommentText] = useInput('');\n  const onSubmitForm = useCallback(() => {\n    dispatch({\n      //이 컴포넌트에서만 사용하면 이렇게 디스패치하고, 재사용한다면 reducer에서 액션함수 만들어서 사용하기\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId: id\n      }\n    });\n  }, [commentText, id]);\n  return __jsx(Form, {\n    onFinish: onSubmitForm\n  }, __jsx(\"div\", null, __jsx(Input.TextArea, {\n    placeholder: \"\\uB313\\uAE00\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694 !\",\n    rows: 4,\n    value: commentText,\n    onChange: onChangeCommentText\n  }), __jsx(Button, {\n    htmlType: \"submit\"\n  }, \"\\uB313\\uAE00 \\uC791\\uC131\")));\n};\n\nexport default CommentForm;","map":null,"metadata":{},"sourceType":"module"}