{"ast":null,"code":"var _jsxFileName = \"/Users/gojieun/Desktop/meong/prepare/front/components/PostCard.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Card, Popover, Button, Avatar, List, Comment } from 'antd';\nimport { RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined, HeartTwoTone } from '@ant-design/icons';\nimport PostImages from './PostImages';\nimport CommentForm from './CommentForm';\nimport PostCardContent from './PostCardContent';\nimport { LIKE_POST_REQUEST, REMOVE_POST_REQUEST, UNLIKE_POST_REQUEST, RETWEET_REQUEST } from '../reducers/post';\nimport FollowButton from './FollowButton';\n\nconst PostCard = ({\n  post\n}) => {\n  const dispatch = useDispatch();\n  const {\n    removePostLoading\n  } = useSelector(state => state.post);\n  const {\n    0: commentFormOpened,\n    1: setCommentFormOpened\n  } = useState(false);\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const onLike = useCallback(() => {\n    if (!id) {\n      return alert('로그인이 필요합니다.');\n    }\n\n    return dispatch({\n      type: LIKE_POST_REQUEST,\n      data: post.id\n    });\n  }, [id]);\n  const onUnlike = useCallback(() => {\n    if (!id) {\n      return alert('로그인이 필요합니다.');\n    }\n\n    return dispatch({\n      type: UNLIKE_POST_REQUEST,\n      data: post.id\n    });\n  }, [id]);\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened(prev => !prev);\n  }, []);\n  const onRemovePost = useCallback(() => {\n    if (!id) {\n      return alert('로그인이 필요합니다.');\n    }\n\n    return dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id\n    });\n  }, [id]); //   const onRetweet = useCallback(() => {\n  //     if (!id) {\n  //       return alert('로그인이 필요합니다.');\n  //     }\n  //     return dispatch({\n  //       type: RETWEET_REQUEST,\n  //       data: post.id,\n  //     });\n  //   }, [id]);\n\n  const liked = post.Likers.find(v => v.id === id);\n  return __jsx(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, __jsx(Card, {\n    cover: post.Images[0] && __jsx(PostImages, {\n      images: post.Images,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 34\n      }\n    }),\n    actions: [//   <RetweetOutlined key=\"retweet\" onClick={onRetweet} />,\n    liked ? __jsx(HeartTwoTone, {\n      twoToneColor: \"#eb2f96\",\n      key: \"heart\",\n      onClick: onUnlike,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }\n    }) : __jsx(HeartOutlined, {\n      key: \"heart\",\n      onClick: onLike,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }), __jsx(MessageOutlined, {\n      key: \"comment\",\n      onClick: onToggleComment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }), __jsx(Popover, {\n      key: \"more\",\n      content: __jsx(Button.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }\n      }, id && post.User.id === id ? __jsx(React.Fragment, null, __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 23\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        type: \"danger\",\n        loading: removePostLoading,\n        onClick: onRemovePost,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 23\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }\n      }, \"\\uC2E0\\uACE0\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }))] // title={post.RetweetId ? `${post.User.nickname}님이 리트윗하셨습니다.` : null}\n    ,\n    extra: id && __jsx(FollowButton, {\n      post: post,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 22\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 23\n      }\n    }, post.User.nickname[0]),\n    title: post.User.nickname,\n    description: __jsx(PostCardContent, {\n      postData: post.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 28\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  })), commentFormOpened && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, __jsx(CommentForm, {\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }), __jsx(List, {\n    header: `${post.Comments.length}개의 댓글`,\n    itemLayout: \"horizontal\",\n    dataSource: post.Comments,\n    renderItem: item => __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 15\n      }\n    }, __jsx(Comment, {\n      author: item.User.nickname,\n      avatar: __jsx(Avatar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 27\n        }\n      }, item.User.nickname[0]),\n      content: item.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  })));\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.string,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object),\n    Likers: PropTypes.arrayOf(PropTypes.object) // RetweetId: PropTypes.number,\n    // Retweet: PropTypes.objectOf(PropTypes.any),\n\n  }).isRequired\n};\nexport default PostCard;","map":{"version":3,"names":["React","useState","useCallback","PropTypes","useSelector","useDispatch","Card","Popover","Button","Avatar","List","Comment","RetweetOutlined","HeartOutlined","MessageOutlined","EllipsisOutlined","HeartTwoTone","PostImages","CommentForm","PostCardContent","LIKE_POST_REQUEST","REMOVE_POST_REQUEST","UNLIKE_POST_REQUEST","RETWEET_REQUEST","FollowButton","PostCard","post","dispatch","removePostLoading","state","commentFormOpened","setCommentFormOpened","id","user","me","onLike","alert","type","data","onUnlike","onToggleComment","prev","onRemovePost","liked","Likers","find","v","marginBottom","Images","User","nickname","content","Comments","length","item","propTypes","shape","number","object","string","createdAt","arrayOf","isRequired"],"sources":["/Users/gojieun/Desktop/meong/prepare/front/components/PostCard.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Card, Popover, Button, Avatar, List, Comment } from 'antd';\nimport {\n  RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined, HeartTwoTone,\n} from '@ant-design/icons';\n\nimport PostImages from './PostImages';\nimport CommentForm from './CommentForm';\nimport PostCardContent from './PostCardContent';\nimport { LIKE_POST_REQUEST, REMOVE_POST_REQUEST, UNLIKE_POST_REQUEST, RETWEET_REQUEST } from '../reducers/post';\nimport FollowButton from './FollowButton';\n\nconst PostCard = ({ post }) => {\n  const dispatch = useDispatch();\n  const { removePostLoading } = useSelector((state) => state.post);\n  const [commentFormOpened, setCommentFormOpened] = useState(false);\n  const id = useSelector((state) => state.user.me?.id);\n\n  const onLike = useCallback(() => {\n    if (!id) {\n      return alert('로그인이 필요합니다.');\n    }\n    return dispatch({\n      type: LIKE_POST_REQUEST,\n      data: post.id,\n    });\n  }, [id]);\n  const onUnlike = useCallback(() => {\n    if (!id) {\n      return alert('로그인이 필요합니다.');\n    }\n    return dispatch({\n      type: UNLIKE_POST_REQUEST,\n      data: post.id,\n    });\n  }, [id]);\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened((prev) => !prev);\n  }, []);\n\n  const onRemovePost = useCallback(() => {\n    if (!id) {\n      return alert('로그인이 필요합니다.');\n    }\n    return dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id,\n    });\n  }, [id]);\n\n//   const onRetweet = useCallback(() => {\n//     if (!id) {\n//       return alert('로그인이 필요합니다.');\n//     }\n//     return dispatch({\n//       type: RETWEET_REQUEST,\n//       data: post.id,\n//     });\n//   }, [id]);\n\n  const liked = post.Likers.find((v) => v.id === id);\n  return (\n    <div style={{ marginBottom: 20 }}>\n      <Card\n        cover={post.Images[0] && <PostImages images={post.Images} />}\n        actions={[\n        //   <RetweetOutlined key=\"retweet\" onClick={onRetweet} />,\n          liked\n            ? <HeartTwoTone twoToneColor=\"#eb2f96\" key=\"heart\" onClick={onUnlike} />\n            : <HeartOutlined key=\"heart\" onClick={onLike} />,\n          <MessageOutlined key=\"comment\" onClick={onToggleComment} />,\n          <Popover\n            key=\"more\"\n            content={(\n              <Button.Group>\n                {id && post.User.id === id\n                  ? (\n                    <>\n                      <Button>수정</Button>\n                      <Button type=\"danger\" loading={removePostLoading} onClick={onRemovePost}>삭제</Button>\n                    </>\n                  )\n                  : <Button>신고</Button>}\n              </Button.Group>\n            )}\n          >\n            <EllipsisOutlined />\n          </Popover>,\n        ]}\n        // title={post.RetweetId ? `${post.User.nickname}님이 리트윗하셨습니다.` : null}\n        extra={id && <FollowButton post={post} />}\n      >\n        {/* {post.RetweetId && post.Retweet\n          ? (\n            <Card\n              cover={post.Retweet.Images[0] && <PostImages images={post.Retweet.Images} />}\n            >\n              <Card.Meta\n                avatar={<Avatar>{post.Retweet.User.nickname[0]}</Avatar>}\n                title={post.Retweet.User.nickname}\n                description={<PostCardContent postData={post.Retweet.content} />}\n              />\n            </Card>\n          )\n          : ( */}\n            <Card.Meta\n              avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\n              title={post.User.nickname}\n              description={<PostCardContent postData={post.content} />}\n            />\n          {/* )} */}\n      </Card>\n      {commentFormOpened && (\n        <div>\n          <CommentForm post={post} />\n          <List\n            header={`${post.Comments.length}개의 댓글`}\n            itemLayout=\"horizontal\"\n            dataSource={post.Comments}\n            renderItem={(item) => (\n              <li>\n                <Comment\n                  author={item.User.nickname}\n                  avatar={<Avatar>{item.User.nickname[0]}</Avatar>}\n                  content={item.content}\n                />\n              </li>\n            )}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.string,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object),\n    Likers: PropTypes.arrayOf(PropTypes.object),\n    // RetweetId: PropTypes.number,\n    // Retweet: PropTypes.objectOf(PropTypes.any),\n  }).isRequired,\n};\n\nexport default PostCard;"],"mappings":"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"},"metadata":{},"sourceType":"module"}