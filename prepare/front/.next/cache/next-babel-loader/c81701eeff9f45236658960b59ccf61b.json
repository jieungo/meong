{"ast":null,"code":"var _jsxFileName = \"/Users/gojieun/Desktop/meong/prepare/front/pages/map.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { END } from 'redux-saga';\nimport { LOAD_MY_INFO_REQUEST, SIGN_UP_REQUEST } from '../reducers/user';\nimport wrapper from '../store/configureStore';\nimport Head from 'next/head';\nimport AppLayout from '../components/AppLayout';\nimport KakaomapComponent from \"../src/KakaomapComponent\";\n\nconst Map = () => {\n  const kakaoMap = React.useRef(null);\n  useEffect(() => {\n    if (kakaoMap && kakaoMap.current) {\n      const x = 126.570667;\n      const y = 33.450701;\n      const coords = new window.daum.maps.LatLng(y, x); // 지도의 중심좌표\n\n      const options = {\n        center: coords,\n        level: 2\n      };\n      const map = new window.daum.maps.Map(kakaoMap.current, options);\n      const marker = new window.daum.maps.Marker({\n        position: coords,\n        map\n      }); // 맵의 중앙으로 이동\n\n      map.relayout();\n      map.setCenter(coords); // 마커를 중앙으로 이동\n\n      marker.setPosition(coords); // 일반 지도와 스카이뷰로 지도 타입을 전환할 수 있는 지도타입 컨트롤을 생성합니다\n\n      const mapTypeControl = new window.daum.maps.MapTypeControl(); // 지도에 컨트롤을 추가해야 지도위에 표시됩니다\n      // kakao.maps.ControlPosition은 컨트롤이 표시될 위치를 정의하는데 TOPRIGHT는 오른쪽 위를 의미합니다\n\n      map.addControl(mapTypeControl, window.kakao.maps.ControlPosition.TOPRIGHT); // 지도 확대 축소를 제어할 수 있는  줌 컨트롤을 생성합니다\n\n      const zoomControl = new window.daum.maps.ZoomControl();\n      map.addControl(zoomControl, window.daum.maps.ControlPosition.RIGHT);\n    }\n  }, [kakaoMap]);\n  return;\n\n  __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, __jsx(KakaomapComponent, {\n    ref: kakaoMap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }), \";\");\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  console.log('getServerSideProps start');\n  console.log(context.req.headers);\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch(END);\n  console.log('getServerSideProps end');\n  await context.store.sagaTask.toPromise();\n});\nexport default Map;","map":{"version":3,"names":["React","useCallback","useState","useEffect","axios","END","LOAD_MY_INFO_REQUEST","SIGN_UP_REQUEST","wrapper","Head","AppLayout","KakaomapComponent","Map","kakaoMap","useRef","current","x","y","coords","window","daum","maps","LatLng","options","center","level","map","marker","Marker","position","relayout","setCenter","setPosition","mapTypeControl","MapTypeControl","addControl","kakao","ControlPosition","TOPRIGHT","zoomControl","ZoomControl","RIGHT","getServerSideProps","context","console","log","req","headers","cookie","defaults","Cookie","store","dispatch","type","sagaTask","toPromise"],"sources":["/Users/gojieun/Desktop/meong/prepare/front/pages/map.js"],"sourcesContent":["import React, { useCallback, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { END } from 'redux-saga';\nimport { LOAD_MY_INFO_REQUEST, SIGN_UP_REQUEST } from '../reducers/user';\nimport wrapper from '../store/configureStore';\nimport Head from 'next/head';\nimport AppLayout from '../components/AppLayout';\nimport KakaomapComponent from \"../src/KakaomapComponent\";\n\n\nconst Map = () => {\n    const kakaoMap = React.useRef(null);\n\n    useEffect(() => {\n      if (kakaoMap && kakaoMap.current) {\n        const x = 126.570667;\n        const y = 33.450701;\n        const coords = new (window).daum.maps.LatLng(y, x); // 지도의 중심좌표\n        const options = {\n          center: coords,\n          level: 2,\n        };\n        const map = new (window).daum.maps.Map(kakaoMap.current, options);\n        const marker = new (window).daum.maps.Marker({\n          position: coords,\n          map,\n        });\n        // 맵의 중앙으로 이동\n        map.relayout();\n        map.setCenter(coords);\n        // 마커를 중앙으로 이동\n        marker.setPosition(coords);\n  \n        // 일반 지도와 스카이뷰로 지도 타입을 전환할 수 있는 지도타입 컨트롤을 생성합니다\n        const mapTypeControl = new (window).daum.maps.MapTypeControl();\n  \n        // 지도에 컨트롤을 추가해야 지도위에 표시됩니다\n        // kakao.maps.ControlPosition은 컨트롤이 표시될 위치를 정의하는데 TOPRIGHT는 오른쪽 위를 의미합니다\n        map.addControl(\n          mapTypeControl,\n          (window).kakao.maps.ControlPosition.TOPRIGHT\n        );\n        // 지도 확대 축소를 제어할 수 있는  줌 컨트롤을 생성합니다\n        const zoomControl = new (window).daum.maps.ZoomControl();\n        map.addControl(\n          zoomControl,\n          (window).daum.maps.ControlPosition.RIGHT\n        );\n      }\n    }, [kakaoMap]);\n    return \n    <AppLayout>\n    <KakaomapComponent ref={kakaoMap} />;\n    </AppLayout>\n  };\n\n\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\n    console.log('getServerSideProps start');\n    console.log(context.req.headers);\n    const cookie = context.req ? context.req.headers.cookie : '';\n    axios.defaults.headers.Cookie = '';\n    if (context.req && cookie) {\n      axios.defaults.headers.Cookie = cookie;\n    }\n    context.store.dispatch({\n      type: LOAD_MY_INFO_REQUEST,\n    });\n    context.store.dispatch(END);\n    console.log('getServerSideProps end');\n    await context.store.sagaTask.toPromise();\n  });\n\nexport default Map;"],"mappings":"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"},"metadata":{},"sourceType":"module"}