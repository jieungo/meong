{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useCallback } from 'react';\nimport { Button } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { FOLLOW_REQUEST, UNFOLLOW_REQUEST } from '../reducers/user';\n\nconst FollowButton = ({\n  post\n}) => {\n  var _post$User3;\n\n  const dispatch = useDispatch();\n  const {\n    me,\n    followLoading,\n    unfollowLoading\n  } = useSelector(state => state.user);\n  const isFollowing = me === null || me === void 0 ? void 0 : me.Followings.find(v => {\n    var _post$User;\n\n    return v.id === ((_post$User = post.User) === null || _post$User === void 0 ? void 0 : _post$User.id);\n  });\n  const onClickButton = useCallback(() => {\n    if (isFollowing) {\n      dispatch({\n        type: UNFOLLOW_REQUEST,\n        data: post.User.id\n      });\n    } else {\n      var _post$User2;\n\n      dispatch({\n        type: FOLLOW_REQUEST,\n        data: (_post$User2 = post.User) === null || _post$User2 === void 0 ? void 0 : _post$User2.id\n      });\n    }\n  }, [isFollowing]);\n\n  if (((_post$User3 = post.User) === null || _post$User3 === void 0 ? void 0 : _post$User3.id) === me.id) {\n    return null;\n  }\n\n  return __jsx(Button, {\n    loading: followLoading || unfollowLoading,\n    onClick: onClickButton\n  }, isFollowing ? '언팔로우' : '팔로우');\n};\n\nexport default FollowButton;","map":null,"metadata":{},"sourceType":"module"}