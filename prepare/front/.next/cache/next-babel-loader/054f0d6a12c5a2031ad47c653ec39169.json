{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useCallback, useState } from 'react';\nimport { Button, Card, Popover, List, Comment, Avatar } from 'antd';\nimport { CommentOutlined, EllipsisOutlined } from '@ant-design/icons';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PostImages from './PostImages';\nimport CommentForm from './CommentForm';\nimport PostCardContent from './PostCardContent';\nimport { REMOVE_POST_REQUEST } from '../reducers/post';\nimport FollowButton from './FollowButton';\nimport LikeButton from './LikeButton';\n\nconst PostCard = ({\n  post\n}) => {\n  // const id = user?.id -> user && user.id; 옵셔널 체이닝 연산자\n  const id = useSelector(state => {\n    var _state$user$user;\n\n    return (_state$user$user = state.user.user) === null || _state$user$user === void 0 ? void 0 : _state$user$user.id;\n  }); // 위의 두 줄을 이렇게 합쳐도 가능\n\n  const dispatch = useDispatch();\n  const {\n    0: commentOpend,\n    1: setCommentOpend\n  } = useState(false);\n  const onToggleComment = useCallback(() => {\n    setCommentOpend(prev => !prev);\n  });\n  const onRemovePost = useCallback(() => {\n    dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id\n    }, []);\n  });\n  return __jsx(\"div\", null, __jsx(Card, {\n    cover: post.Images[0] && __jsx(PostImages, {\n      images: post.Images\n    }),\n    actions: [__jsx(CommentOutlined, {\n      key: \"comment\",\n      onClick: onToggleComment\n    }), __jsx(LikeButton, {\n      key: \"like\",\n      post: post\n    }), __jsx(Popover, {\n      key: \"more\",\n      content: __jsx(Button.Group, null, id && post.User.id === id ? __jsx(React.Fragment, null, __jsx(Button, null, \"\\uC218\\uC815\"), __jsx(Button, {\n        type: \"danger\",\n        onClick: onRemovePost\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, null, \"\\uC2E0\\uACE0\"))\n    }, __jsx(EllipsisOutlined, null))],\n    extra: id && __jsx(FollowButton, {\n      post: post\n    })\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, null, post.User.nickname[0]),\n    title: post.User.nickname,\n    description: __jsx(PostCardContent, {\n      postData: post.content\n    })\n  })), commentOpend && __jsx(\"div\", null, __jsx(CommentForm, {\n    post: post\n  }), __jsx(List, {\n    header: `${post.Comment.length}개의 댓글`,\n    itemLayout: \"horizontal\",\n    dataSource: post.Comment,\n    renderItem: item => __jsx(\"li\", null, __jsx(Comment, {\n      author: item.User.nickname,\n      avatar: __jsx(Avatar, null, item.User.nickname[0]),\n      content: item.content\n    }))\n  })));\n};\n\nexport default PostCard;","map":null,"metadata":{},"sourceType":"module"}