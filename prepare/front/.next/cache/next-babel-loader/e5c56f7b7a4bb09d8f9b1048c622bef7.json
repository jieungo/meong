{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport AppLayout from '../components/AppLayout';\nimport Head from \"next/head\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport PostCard from '../components/PostCard';\nimport Wrapper from '../styles/wrapper.module.css';\nimport { LOAD_POST_REQUEST } from '../reducers/post';\nimport { useInView } from 'react-intersection-observer';\n\nvar community = function community() {\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector.mainPosts,\n      hasMorePost = _useSelector.hasMorePost,\n      loadPostLoading = _useSelector.loadPostLoading;\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    dispatch({\n      type: LOAD_POST_REQUEST\n    });\n  }, []); //useEffect로 컴포넌트디드마운트 효과 (뒤에 빈배열로 해놔야한다)\n\n  var _useInView = useInView(),\n      _useInView2 = _slicedToArray(_useInView, 2),\n      ref = _useInView2[0],\n      inView = _useInView2[1];\n\n  useEffect(function () {\n    if (inView && hasMorePost && !loadPostLoading) {\n      var _mainPosts;\n\n      var lastId = (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id;\n      dispatch({\n        type: LOAD_POST_REQUEST,\n        lastId: lastId\n      });\n    }\n  }, [inView, hasMorePost, loadPostLoading, mainPosts]);\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"meta\", {\n    charSet: \"utf-8\"\n  }), __jsx(\"title\", null, \"\\uCEE4\\uBBA4\\uB2C8\\uD2F0 | \\uB180\\uBA4D\\uC26C\\uBA4D\")), __jsx(AppLayout, null, __jsx(\"div\", {\n    className: Wrapper.pageWrapper\n  }, mainPosts.map(function (post) {\n    return __jsx(PostCard, {\n      key: post.id,\n      post: post\n    });\n  }), __jsx(\"div\", {\n    ref: hasMorePost && !loadPostLoading ? ref : undefined\n  }))));\n};\n\nexport default community;","map":null,"metadata":{},"sourceType":"module"}