{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Card, Popover, Button, Avatar, List, Comment } from 'antd';\nimport { LikeOutlined, MessageOutlined, EllipsisOutlined, LikeTwoTone } from '@ant-design/icons';\nimport moment from 'moment';\nimport PostImages from './PostImages';\nimport CommentForm from './CommentForm';\nimport PostCardContent from './PostCardContent';\nimport { LIKE_POST_REQUEST, REMOVE_POST_REQUEST, UNLIKE_POST_REQUEST, RETWEET_REQUEST } from '../reducers/post';\nimport FollowButton from './FollowButton';\nimport Link from 'next/link';\n\nvar PostCard = function PostCard(_ref) {\n  var _post$User, _post$User2, _post$User3, _post$User4;\n\n  var post = _ref.post;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      removePostLoading = _useSelector.removePostLoading;\n\n  var _useState = useState(false),\n      commentFormOpened = _useState[0],\n      setCommentFormOpened = _useState[1];\n\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  var onLike = useCallback(function () {\n    if (!id) {\n      return alert('로그인이 필요합니다.');\n    }\n\n    return dispatch({\n      type: LIKE_POST_REQUEST,\n      data: post.id\n    });\n  }, [id]);\n  var onUnlike = useCallback(function () {\n    if (!id) {\n      return alert('로그인이 필요합니다.');\n    }\n\n    return dispatch({\n      type: UNLIKE_POST_REQUEST,\n      data: post.id\n    });\n  }, [id]);\n  var onToggleComment = useCallback(function () {\n    setCommentFormOpened(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var onRemovePost = useCallback(function () {\n    if (!id) {\n      return alert('로그인이 필요합니다.');\n    }\n\n    return dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id\n    });\n  }, [id]);\n  var liked = post.Likers.find(function (v) {\n    return v.id === id;\n  });\n  return __jsx(\"div\", {\n    style: {\n      width: '100%',\n      marginBottom: 20\n    }\n  }, __jsx(Card, {\n    cover: post.Images[0] && __jsx(PostImages, {\n      images: post.Images\n    }),\n    actions: [liked ? __jsx(LikeTwoTone, {\n      twoToneColor: \"#857171\",\n      key: \"heart\",\n      onClick: onUnlike\n    }) : __jsx(LikeOutlined, {\n      key: \"heart\",\n      onClick: onLike\n    }), __jsx(MessageOutlined, {\n      key: \"comment\",\n      onClick: onToggleComment\n    }), __jsx(Popover, {\n      key: \"more\",\n      content: __jsx(Button.Group, null, id && ((_post$User = post.User) === null || _post$User === void 0 ? void 0 : _post$User.id) === id ? __jsx(React.Fragment, null, __jsx(Button, null, \"\\uC218\\uC815\"), __jsx(Button, {\n        type: \"danger\",\n        loading: removePostLoading,\n        onClick: onRemovePost\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, null, \"\\uC2E0\\uACE0\"))\n    }, __jsx(EllipsisOutlined, null))],\n    extra: id && __jsx(FollowButton, {\n      post: post\n    })\n  }, __jsx(\"span\", {\n    style: {\n      \"float\": 'right'\n    }\n  }, moment(post.createdAt).format('YYYY.MM.DD.')), __jsx(Card.Meta, {\n    avatar: __jsx(Link, {\n      href: \"/user/\".concat((_post$User2 = post.User) === null || _post$User2 === void 0 ? void 0 : _post$User2.id)\n    }, __jsx(\"a\", null, __jsx(Avatar, null, (_post$User3 = post.User) === null || _post$User3 === void 0 ? void 0 : _post$User3.nickname[0]))),\n    title: (_post$User4 = post.User) === null || _post$User4 === void 0 ? void 0 : _post$User4.nickname,\n    description: __jsx(PostCardContent, {\n      postData: post.content\n    })\n  })), commentFormOpened && __jsx(\"div\", null, __jsx(CommentForm, {\n    post: post\n  }), __jsx(List, {\n    header: \"\".concat(post.Comments.length, \"\\uAC1C\\uC758 \\uB313\\uAE00\"),\n    itemLayout: \"horizontal\",\n    dataSource: post.Comments,\n    renderItem: function renderItem(item) {\n      return __jsx(\"li\", null, __jsx(Comment, {\n        author: item.User.nickname,\n        avatar: __jsx(Link, {\n          href: \"/user/\".concat(item.User.id)\n        }, __jsx(\"a\", null, __jsx(Avatar, null, item.User.nickname[0]))),\n        content: item.content\n      }));\n    }\n  })));\n};\n\nexport default PostCard;","map":{"version":3,"names":["React","useState","useCallback","useSelector","useDispatch","Card","Popover","Button","Avatar","List","Comment","LikeOutlined","MessageOutlined","EllipsisOutlined","LikeTwoTone","moment","PostImages","CommentForm","PostCardContent","LIKE_POST_REQUEST","REMOVE_POST_REQUEST","UNLIKE_POST_REQUEST","RETWEET_REQUEST","FollowButton","Link","PostCard","post","dispatch","state","removePostLoading","commentFormOpened","setCommentFormOpened","id","user","me","onLike","alert","type","data","onUnlike","onToggleComment","prev","onRemovePost","liked","Likers","find","v","width","marginBottom","Images","User","createdAt","format","nickname","content","Comments","length","item"],"sources":["/Users/gojieun/Desktop/meong/prepare/front/components/PostCard.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Card, Popover, Button, Avatar, List, Comment } from 'antd';\nimport {\n   LikeOutlined, MessageOutlined, EllipsisOutlined, LikeTwoTone,\n} from '@ant-design/icons';\nimport moment from 'moment';\nimport PostImages from './PostImages';\nimport CommentForm from './CommentForm';\nimport PostCardContent from './PostCardContent';\nimport { LIKE_POST_REQUEST, REMOVE_POST_REQUEST, UNLIKE_POST_REQUEST, RETWEET_REQUEST } from '../reducers/post';\nimport FollowButton from './FollowButton';\nimport Link from 'next/link';\n\n\nconst PostCard = ({ post }) => {\n  const dispatch = useDispatch();\n  const { removePostLoading } = useSelector((state) => state.post);\n  const [commentFormOpened, setCommentFormOpened] = useState(false);\n  const id = useSelector((state) => state.user.me?.id);\n\n  const onLike = useCallback(() => {\n    if (!id) {\n      return alert('로그인이 필요합니다.');\n    }\n    return dispatch({\n      type: LIKE_POST_REQUEST,\n      data: post.id,\n    });\n  }, [id]);\n  const onUnlike = useCallback(() => {\n    if (!id) {\n      return alert('로그인이 필요합니다.');\n    }\n    return dispatch({\n      type: UNLIKE_POST_REQUEST,\n      data: post.id,\n    });\n  }, [id]);\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened((prev) => !prev);\n  }, []);\n\n  const onRemovePost = useCallback(() => {\n    if (!id) {\n      return alert('로그인이 필요합니다.');\n    }\n    return dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id,\n    });\n  }, [id]);\n\n  const liked = post.Likers.find((v) => v.id === id);\n  return (\n    <div style={{width: '100%', marginBottom: 20 }}>\n      <Card\n        cover={post.Images[0] && <PostImages images={post.Images} />}\n        actions={[\n          liked\n            ? <LikeTwoTone twoToneColor=\"#857171\" key=\"heart\" onClick={onUnlike} />\n            : <LikeOutlined key=\"heart\" onClick={onLike} />,\n          <MessageOutlined key=\"comment\" onClick={onToggleComment} />,\n            <Popover\n                key=\"more\"\n                content={(\n                <Button.Group>\n                    {id && post.User?.id === id\n                    ? (\n                        <>\n                        <Button>수정</Button>\n                        <Button type=\"danger\" loading={removePostLoading} onClick={onRemovePost}>삭제</Button>\n                        </>\n                    )\n                    : <Button>신고</Button>}\n                </Button.Group>\n                )}\n            >\n                <EllipsisOutlined />\n            </Popover>\n\n        ]}\n        extra={id && <FollowButton post={post} />}\n      >\n          <span style={{ float: 'right' }}>{moment(post.createdAt).format('YYYY.MM.DD.')}</span>\n          <Card.Meta\n            avatar={<Link href={`/user/${post.User?.id}`}><a><Avatar>{post.User?.nickname[0]}</Avatar></a></Link>}\n            title={post.User?.nickname}\n            description={<PostCardContent postData={post.content} />}\n            />\n      </Card>\n      {commentFormOpened && (\n        <div>\n          <CommentForm post={post} />\n          <List\n            header={`${post.Comments.length}개의 댓글`}\n            itemLayout=\"horizontal\"\n            dataSource={post.Comments}\n            renderItem={(item) => (\n              <li>\n                <Comment\n                  author={item.User.nickname}\n                  avatar={<Link href={`/user/${item.User.id}`}><a><Avatar>{item.User.nickname[0]}</Avatar></a></Link>}\n                  content={item.content}\n                />\n              </li>\n            )}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.string,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object),\n    Likers: PropTypes.arrayOf(PropTypes.object),\n  }).isRequired,\n};\n\nexport default PostCard;"],"mappings":"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"},"metadata":{},"sourceType":"module"}