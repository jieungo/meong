{"ast":null,"code":"import shortId from 'shortid';\nimport produce from 'immer';\nimport faker from 'faker';\nvar initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  hasMorePost: true,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  loadPostLoading: false,\n  loadPostDone: false,\n  loadPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n  likeLoading: false,\n  likeDone: false,\n  likeError: null,\n  unLikeLoading: false,\n  unLikeDone: false,\n  unLikeError: null\n};\nexport var generateDummyPost = function generateDummyPost(number) {\n  return Array(number).fill().map(function () {\n    return {\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: faker.name.findName()\n      },\n      content: faker.lorem.paragraph(),\n      Images: [{\n        src: '../2.jpeg'\n      }],\n      Comment: [{\n        User: {\n          id: shortId.generate(),\n          nickname: faker.name.findName()\n        },\n        content: faker.lorem.sentence()\n      }],\n      Liked: []\n    };\n  });\n};\nexport var LOAD_POST_REQUEST = 'LOAD_POST_REQUEST';\nexport var LOAD_POST_SUCCESS = 'LOAD_POST_SUCCESS';\nexport var LOAD_POST_FAILURE = 'LOAD_POST_FAILURE';\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport var REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport var REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport var LIKE_REQUEST = 'LIKE_REQUEST';\nexport var LIKE_SUCCESS = 'LIKE_SUCCESS';\nexport var LIKE_FAILURE = 'LIKE_FAILURE';\nexport var UNLIKE_REQUEST = 'UNLIKE_REQUEST';\nexport var UNLIKE_SUCCESS = 'UNLIKE_SUCCESS';\nexport var UNLIKE_FAILURE = 'UNLIKE_FAILURE';\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var addComment = function addComment(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case LIKE_REQUEST:\n        draft.likeLoading = true;\n        draft.likeDone = false;\n        draft.likeError = null;\n        break;\n\n      case LIKE_SUCCESS:\n        draft.Liked.push({\n          id: action.data\n        });\n        console.log(action.data);\n        draft.likeLoading = false;\n        draft.likeDone = true;\n        break;\n\n      case LIKE_FAILURE:\n        draft.loadPostLoading = false;\n        draft.loadPostError = action.error;\n        break;\n\n      case LOAD_POST_REQUEST:\n        draft.loadPostLoading = true;\n        draft.loadPostDone = false;\n        draft.loadPostError = null;\n        break;\n\n      case LOAD_POST_SUCCESS:\n        draft.mainPosts = draft.mainPosts.concat(action.data);\n        draft.loadPostLoading = false;\n        draft.loadPostDone = true;\n        draft.hasMorePost = draft.mainPosts.length < 50;\n        break;\n\n      case LOAD_POST_FAILURE:\n        draft.loadPostLoading = false;\n        draft.loadPostError = action.error;\n        break;\n\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(action.data);\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        draft.mainPosts = draft.mainPosts.filter(function (v) {\n          return v.id !== action.data;\n        });\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        {\n          var post = draft.mainPosts.find(function (v) {\n            return v.id === action.data.postId;\n          });\n          post.Comment.unshift(action.data);\n          draft.addCommentLoading = false;\n          draft.addCommentDone = true;\n          break; // const postIndex = state.mainPosts.findIndex((v) => v.id === action.data.postId);\n          // const post = { ...state.mainPosts[postIndex] };\n          // post.Comments = [dummyComment(action.data.content), ...post.Comments];\n          // const mainPosts = [...state.mainPosts];\n          // mainPosts[postIndex] = post;\n          // return {\n          //   ...state,\n          //   mainPosts,\n          //   addCommentLoading: false,\n          //   addCommentDone: true,\n          // };\n        }\n\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"names":["shortId","produce","faker","initialState","mainPosts","imagePaths","hasMorePost","addPostLoading","addPostDone","addPostError","loadPostLoading","loadPostDone","loadPostError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","likeLoading","likeDone","likeError","unLikeLoading","unLikeDone","unLikeError","generateDummyPost","number","Array","fill","map","id","generate","User","nickname","name","findName","content","lorem","paragraph","Images","src","Comment","sentence","Liked","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","LIKE_REQUEST","LIKE_SUCCESS","LIKE_FAILURE","UNLIKE_REQUEST","UNLIKE_SUCCESS","UNLIKE_FAILURE","addPost","data","type","addComment","reducer","state","action","draft","push","console","log","error","concat","length","unshift","filter","v","post","find","postId"],"sources":["/Users/gojieun/Desktop/meong/prepare/front/reducers/post.js"],"sourcesContent":["import shortId from 'shortid';\nimport produce from 'immer';\nimport faker from 'faker';\n\nconst initialState = {\n    mainPosts: [],\n    imagePaths: [],\n    hasMorePost: true,\n    addPostLoading: false,\n    addPostDone: false,\n    addPostError: null,\n    loadPostLoading: false,\n    loadPostDone: false,\n    loadPostError: null,\n    removePostLoading: false,\n    removePostDone: false,\n    removePostError: null,\n    addCommentLoading: false,\n    addCommentDone: false,\n    addCommentError: null,\n    likeLoading: false,\n    likeDone: false,\n    likeError: null,\n    unLikeLoading: false,\n    unLikeDone: false,\n    unLikeError: null,\n}\n\nexport const generateDummyPost = (number) => Array(number).fill().map(() => ({\n    id: shortId.generate(),\n        User: {\n            id: shortId.generate(),\n            nickname: faker.name.findName(),\n        },\n        content: faker.lorem.paragraph(),\n        Images: [{\n            src: '../2.jpeg'\n        }],\n        Comment: [{\n            User: {\n                id: shortId.generate(),\n                nickname: faker.name.findName(),\n            },\n            content: faker.lorem.sentence(),\n        }],\n    Liked: [],\n    }));\n\n\n\nexport const LOAD_POST_REQUEST = 'LOAD_POST_REQUEST';\nexport const LOAD_POST_SUCCESS = 'LOAD_POST_SUCCESS';\nexport const LOAD_POST_FAILURE = 'LOAD_POST_FAILURE';\n\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\n\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\n\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\n\nexport const LIKE_REQUEST = 'LIKE_REQUEST';\nexport const LIKE_SUCCESS = 'LIKE_SUCCESS';\nexport const LIKE_FAILURE = 'LIKE_FAILURE';\n\nexport const UNLIKE_REQUEST = 'UNLIKE_REQUEST';\nexport const UNLIKE_SUCCESS = 'UNLIKE_SUCCESS';\nexport const UNLIKE_FAILURE = 'UNLIKE_FAILURE';\n\nexport const addPost = (data) => ({\n    type: ADD_POST_REQUEST,\n    data,\n});\n\nexport const addComment = (data) => ({\n    type: ADD_COMMENT_REQUEST,\n    data,\n})\n\nconst reducer = (state = initialState, action) => {\n    return produce(state, (draft) => {\n        switch (action.type) {\n            case LIKE_REQUEST:\n                draft.likeLoading = true;\n                draft.likeDone = false;\n                draft.likeError = null;\n                break;\n            case LIKE_SUCCESS:\n                draft.Liked.push({id: action.data});\n                console.log(action.data);\n                draft.likeLoading = false;\n                draft.likeDone = true;\n                break;\n            case LIKE_FAILURE:\n                draft.loadPostLoading = false;\n                draft.loadPostError = action.error;\n                break;\n            case LOAD_POST_REQUEST:\n                draft.loadPostLoading = true;\n                draft.loadPostDone = false;\n                draft.loadPostError = null;\n                break;\n            case LOAD_POST_SUCCESS:\n                draft.mainPosts = draft.mainPosts.concat(action.data);\n                draft.loadPostLoading = false;\n                draft.loadPostDone = true;\n                draft.hasMorePost = draft.mainPosts.length < 50;\n                break;\n            case LOAD_POST_FAILURE:\n                draft.loadPostLoading = false;\n                draft.loadPostError = action.error;\n                break;\n            case ADD_POST_REQUEST:\n                draft.addPostLoading = true;\n                draft.addPostDone = false;\n                draft.addPostError = null;\n                break;\n            case ADD_POST_SUCCESS:\n                draft.addPostLoading = false;\n                draft.addPostDone = true;\n                draft.mainPosts.unshift(action.data);\n                break;\n            case ADD_POST_FAILURE:\n                draft.addPostLoading = false;\n                draft.addPostError = action.error;\n                break;\n            case REMOVE_POST_REQUEST:\n                draft.removePostLoading = true;\n                draft.removePostDone = false;\n                draft.removePostError = null;\n                break;\n            case REMOVE_POST_SUCCESS:\n                draft.removePostLoading = false;\n                draft.removePostDone = true;\n                draft.mainPosts = draft.mainPosts.filter((v) => v.id !== action.data);\n                break;\n            case REMOVE_POST_FAILURE:\n                draft.removePostLoading = false;\n                draft.removePostError = action.error;\n                break;\n            case ADD_COMMENT_REQUEST:\n                draft.addCommentLoading = true;\n                draft.addCommentDone = false;\n                draft.addCommentError = null;\n                break;\n            case ADD_COMMENT_SUCCESS: {\n                const post = draft.mainPosts.find((v) => v.id === action.data.postId);\n                post.Comment.unshift(action.data);\n                draft.addCommentLoading = false;\n                draft.addCommentDone = true;\n                break;\n                // const postIndex = state.mainPosts.findIndex((v) => v.id === action.data.postId);\n                // const post = { ...state.mainPosts[postIndex] };\n                // post.Comments = [dummyComment(action.data.content), ...post.Comments];\n                // const mainPosts = [...state.mainPosts];\n                // mainPosts[postIndex] = post;\n                // return {\n                //   ...state,\n                //   mainPosts,\n                //   addCommentLoading: false,\n                //   addCommentDone: true,\n                // };\n                }\n            case ADD_COMMENT_FAILURE:\n                draft.addCommentLoading = false;\n                draft.addCommentError = action.error;\n                break;\n                default:\n                break;\n            }\n            });\n}\n\nexport default reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}