{"ast":null,"code":"import { all, fork, put, delay, takeLatest, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_SUCCESS, LOG_OUT_REQUEST, LOG_OUT_FAILURE, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, FOLLOW_FAILURE, FOLLOW_SUCCESS, FOLLOW_REQUEST } from '../reducers/user';\n\nfunction logInAPI(data) {\n  //실제 서버에 데이터를 보내는 부분. *붙이지 않는다. data는 action.data\n  return axios.post('/user/login', data, {\n    withCredentials: true\n  });\n}\n\nfunction* logIn(action) {\n  //LOG_IN_REQUEST에 대한 매개변수가 여기로 전달이 된다. action.data는 로그인리퀘스트의 데이터\n  try {\n    const result = yield call(logInAPI, action.data); //loginAPI 실행하고 결괏값을 result로 받음.\n\n    yield put({\n      //put은 디스패치!\n      type: LOG_IN_SUCCESS,\n      data: result.data // data: result.data\t//result.data는 API에서의 요청 성공 결과\n\n    });\n  } catch (err) {\n    console.log(err);\n    yield put({\n      type: LOG_IN_FAILURE,\n      data: err.response.data //실패결과\n\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post('/user/logout', null, {\n    withCredentials: true\n  });\n}\n\nfunction* logOut() {\n  try {\n    yield call(logOutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction signUpAPI(data) {\n  return axios.post('http://localhost:3065/user', data); //여긴 제너레이터X. 실제로 서버에 요청을 보냄\n}\n\nfunction* signUp(action) {\n  try {\n    const result = yield call(signUpAPI, action.data); //위의 리턴값을 result에 받음\n\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      // put은 dispatch. 밑의 action을 dispatch\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unFollowAPI() {\n  return axios.post('/api/unFollow');\n}\n\nfunction* unFollow(action) {\n  try {\n    yield delay(1000);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield delay(1000);\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction followAPI() {\n  return axios.post('/api/follow');\n}\n\nfunction* follow(action) {\n  try {\n    yield delay(1000);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield delay(1000);\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  // LOG_IN 액션 실행하면 뒤의 logIn 함수를 실행한다.\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp); //take, call 등 이펙트 앞에는 꼭 yield 붙임\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnFollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unFollow);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut), fork(watchSignUp), fork(watchFollow), fork(watchUnFollow), fork(watchLoadUser)]);\n}","map":{"version":3,"names":["all","fork","put","delay","takeLatest","call","axios","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_SUCCESS","LOG_OUT_REQUEST","LOG_OUT_FAILURE","SIGN_UP_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","UNFOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","FOLLOW_FAILURE","FOLLOW_SUCCESS","FOLLOW_REQUEST","logInAPI","data","post","withCredentials","logIn","action","result","type","err","console","log","response","logOutAPI","logOut","signUpAPI","signUp","error","unFollowAPI","unFollow","followAPI","follow","watchLogIn","watchLogOut","watchSignUp","watchFollow","watchUnFollow","userSaga","watchLoadUser"],"sources":["/Users/gojieun/Desktop/meong/prepare/front/sagas/user.js"],"sourcesContent":["import { all, fork, put, delay, takeLatest, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport {\n    LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE,\n    LOG_OUT_SUCCESS, LOG_OUT_REQUEST, LOG_OUT_FAILURE,\n    SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS,\n    UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS,\n    FOLLOW_FAILURE, FOLLOW_SUCCESS, FOLLOW_REQUEST} from '../reducers/user';\n\n\n    \nfunction logInAPI(data) { //실제 서버에 데이터를 보내는 부분. *붙이지 않는다. data는 action.data\n\treturn axios.post('/user/login', data, { withCredentials: true })\n}\n\nfunction* logIn(action) { //LOG_IN_REQUEST에 대한 매개변수가 여기로 전달이 된다. action.data는 로그인리퀘스트의 데이터\ntry {\n\tconst result = yield call(logInAPI, action.data) //loginAPI 실행하고 결괏값을 result로 받음.\n    yield put({ //put은 디스패치!\n\t\ttype: LOG_IN_SUCCESS,\n        data: result.data,\n\t\t// data: result.data\t//result.data는 API에서의 요청 성공 결과\n\t});\n} catch (err) {\n    console.log(err);\n\tyield put({\n\t\ttype: LOG_IN_FAILURE,\n\t\tdata: err.response.data, //실패결과\n\t})\n}}\n\nfunction logOutAPI() {\n\treturn axios.post('/user/logout', null, { withCredentials: true });\n}\n\nfunction* logOut() {\ntry {\n\tyield call(logOutAPI)\n\tyield put({\n\t\ttype: LOG_OUT_SUCCESS,\n\t});\n} catch (err) {\n\tyield put({\n\t\ttype: LOG_OUT_FAILURE,\n\t\tdata: err.response.data,\n\t})\n}}\n\nfunction signUpAPI(data) {\n    return axios.post('http://localhost:3065/user', data); //여긴 제너레이터X. 실제로 서버에 요청을 보냄\n}\n\nfunction* signUp(action) {\n    try {\n        const result = yield call(signUpAPI, action.data) //위의 리턴값을 result에 받음\n        console.log(result);\n        yield put({\n            type: SIGN_UP_SUCCESS,\n        })\n    } catch(err) {\n        yield put({ // put은 dispatch. 밑의 action을 dispatch\n            type: SIGN_UP_FAILURE,\n            error:err.response.data,\n        })\n    }\n}\n\nfunction unFollowAPI() {\n    return axios.post('/api/unFollow')\n}\n\nfunction* unFollow(action) {\n    try {\n        yield delay(1000);\n        yield put({\n            type: UNFOLLOW_SUCCESS,\n            data: action.data,\n        })\n    } catch(err) {\n        yield delay(1000);\n        yield put({ \n            type: UNFOLLOW_FAILURE,\n            error:err.response.data\n        })\n    }\n}\n\nfunction followAPI() {\n    return axios.post('/api/follow')\n}\n\nfunction* follow(action) {\n    try {\n        yield delay(1000);\n        yield put({\n            type: FOLLOW_SUCCESS,\n            data: action.data,\n        })\n    } catch(err) {\n        yield delay(1000);\n        yield put({ \n            type: FOLLOW_FAILURE,\n            error:err.response.data\n        })\n    }\n}\n\nfunction* watchLogIn() { // LOG_IN 액션 실행하면 뒤의 logIn 함수를 실행한다.\n\tyield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n\tyield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n    yield takeLatest(SIGN_UP_REQUEST, signUp); //take, call 등 이펙트 앞에는 꼭 yield 붙임\n}\n\nfunction* watchFollow() {\n\tyield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnFollow() {\n\tyield takeLatest(UNFOLLOW_REQUEST, unFollow);\n}\n\n\nexport default function* userSaga() {\n    yield all([\n        fork(watchLogIn),\n        fork(watchLogOut),\n\t\tfork(watchSignUp),\n\t\tfork(watchFollow),\n\t\tfork(watchUnFollow),\n        fork(watchLoadUser),\n    ])\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}