{"ast":null,"code":"import produce from '../util/produce';\nexport var initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  hasMorePosts: true,\n  likePostLoading: false,\n  likePostDone: false,\n  likePostError: null,\n  unlikePostLoading: false,\n  unlikePostDone: false,\n  unlikePostError: null,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n  uploadImagesLoading: false,\n  uploadImagesDone: false,\n  uploadImagesError: null //   retweetLoading: false,\n  //   retweetDone: false,\n  //   retweetError: null,\n\n};\nexport var UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\nexport var UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\nexport var UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\nexport var LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport var LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport var LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\nexport var UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport var UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport var UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\nexport var LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport var LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport var LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport var REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport var REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport var RETWEET_REQUEST = 'RETWEET_REQUEST';\nexport var RETWEET_SUCCESS = 'RETWEET_SUCCESS';\nexport var RETWEET_FAILURE = 'RETWEET_FAILURE';\nexport var REMOVE_IMAGE = 'REMOVE_IMAGE';\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var addComment = function addComment(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n}; // 이전 상태를 액션을 통해 다음 상태로 만들어내는 함수(불변성은 지키면서)\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case RETWEET_REQUEST:\n        draft.retweetLoading = true;\n        draft.retweetDone = false;\n        draft.retweetError = null;\n        break;\n\n      case RETWEET_SUCCESS:\n        {\n          draft.retweetLoading = false;\n          draft.retweetDone = true;\n          draft.mainPosts.unshift(action.data);\n          break;\n        }\n\n      case RETWEET_FAILURE:\n        draft.retweetLoading = false;\n        draft.retweetError = action.error;\n        break;\n\n      case REMOVE_IMAGE:\n        draft.imagePaths = draft.imagePaths.filter(function (v, i) {\n          return i !== action.data;\n        });\n        break;\n\n      case UPLOAD_IMAGES_REQUEST:\n        draft.uploadImagesLoading = true;\n        draft.uploadImagesDone = false;\n        draft.uploadImagesError = null;\n        break;\n\n      case UPLOAD_IMAGES_SUCCESS:\n        {\n          draft.imagePaths = action.data;\n          draft.uploadImagesLoading = false;\n          draft.uploadImagesDone = true;\n          break;\n        }\n\n      case UPLOAD_IMAGES_FAILURE:\n        draft.uploadImagesLoading = false;\n        draft.uploadImagesError = action.error;\n        break;\n\n      case LIKE_POST_REQUEST:\n        draft.likePostLoading = true;\n        draft.likePostDone = false;\n        draft.likePostError = null;\n        break;\n\n      case LIKE_POST_SUCCESS:\n        {\n          var post = draft.mainPosts.find(function (v) {\n            return v.id === action.data.PostId;\n          });\n          post.Likers.push({\n            id: action.data.UserId\n          });\n          draft.likePostLoading = false;\n          draft.likePostDone = true;\n          break;\n        }\n\n      case LIKE_POST_FAILURE:\n        draft.likePostLoading = false;\n        draft.likePostError = action.error;\n        break;\n\n      case UNLIKE_POST_REQUEST:\n        draft.unlikePostLoading = true;\n        draft.unlikePostDone = false;\n        draft.unlikePostError = null;\n        break;\n\n      case UNLIKE_POST_SUCCESS:\n        {\n          var _post = draft.mainPosts.find(function (v) {\n            return v.id === action.data.PostId;\n          });\n\n          _post.Likers = _post.Likers.filter(function (v) {\n            return v.id !== action.data.UserId;\n          });\n          draft.unlikePostLoading = false;\n          draft.unlikePostDone = true;\n          break;\n        }\n\n      case UNLIKE_POST_FAILURE:\n        draft.unlikePostLoading = false;\n        draft.unlikePostError = action.error;\n        break;\n\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n\n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.mainPosts = draft.mainPosts.concat(action.data);\n        draft.hasMorePosts = action.data.length === 10;\n        break;\n\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = action.error;\n        break;\n\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(action.data);\n        draft.imagePaths = [];\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        draft.mainPosts = draft.mainPosts.filter(function (v) {\n          return v.id !== action.data.PostId;\n        });\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        {\n          var _post2 = draft.mainPosts.find(function (v) {\n            return v.id === action.data.PostId;\n          });\n\n          _post2.Comments.unshift(action.data);\n\n          draft.addCommentLoading = false;\n          draft.addCommentDone = true;\n          break; // const postIndex = state.mainPosts.findIndex((v) => v.id === action.data.postId);\n          // const post = { ...state.mainPosts[postIndex] };\n          // post.Comments = [dummyComment(action.data.content), ...post.Comments];\n          // const mainPosts = [...state.mainPosts];\n          // mainPosts[postIndex] = post;\n          // return {\n          //   ...state,\n          //   mainPosts,\n          //   addCommentLoading: false,\n          //   addCommentDone: true,\n          // };\n        }\n\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"names":["produce","initialState","mainPosts","imagePaths","hasMorePosts","likePostLoading","likePostDone","likePostError","unlikePostLoading","unlikePostDone","unlikePostError","loadPostsLoading","loadPostsDone","loadPostsError","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","uploadImagesLoading","uploadImagesDone","uploadImagesError","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","RETWEET_REQUEST","RETWEET_SUCCESS","RETWEET_FAILURE","REMOVE_IMAGE","addPost","data","type","addComment","reducer","state","action","draft","retweetLoading","retweetDone","retweetError","unshift","error","filter","v","i","post","find","id","PostId","Likers","push","UserId","concat","length","Comments"],"sources":["/Users/gojieun/Desktop/meong/prepare/front/reducers/post.js"],"sourcesContent":["import produce from '../util/produce';\n\nexport const initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  hasMorePosts: true,\n  likePostLoading: false,\n  likePostDone: false,\n  likePostError: null,\n  unlikePostLoading: false,\n  unlikePostDone: false,\n  unlikePostError: null,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n  uploadImagesLoading: false,\n  uploadImagesDone: false,\n  uploadImagesError: null,\n//   retweetLoading: false,\n//   retweetDone: false,\n//   retweetError: null,\n};\n\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\n\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\n\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\n\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\n\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\n\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\n\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\n\nexport const RETWEET_REQUEST = 'RETWEET_REQUEST';\nexport const RETWEET_SUCCESS = 'RETWEET_SUCCESS';\nexport const RETWEET_FAILURE = 'RETWEET_FAILURE';\n\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE';\n\nexport const addPost = (data) => ({\n  type: ADD_POST_REQUEST,\n  data,\n});\n\nexport const addComment = (data) => ({\n  type: ADD_COMMENT_REQUEST,\n  data,\n});\n\n// 이전 상태를 액션을 통해 다음 상태로 만들어내는 함수(불변성은 지키면서)\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\n  switch (action.type) {\n    case RETWEET_REQUEST:\n      draft.retweetLoading = true;\n      draft.retweetDone = false;\n      draft.retweetError = null;\n      break;\n    case RETWEET_SUCCESS: {\n      draft.retweetLoading = false;\n      draft.retweetDone = true;\n      draft.mainPosts.unshift(action.data);\n      break;\n    }\n    case RETWEET_FAILURE:\n      draft.retweetLoading = false;\n      draft.retweetError = action.error;\n      break;\n    case REMOVE_IMAGE:\n      draft.imagePaths = draft.imagePaths.filter((v, i) => i !== action.data);\n      break;\n    case UPLOAD_IMAGES_REQUEST:\n      draft.uploadImagesLoading = true;\n      draft.uploadImagesDone = false;\n      draft.uploadImagesError = null;\n      break;\n    case UPLOAD_IMAGES_SUCCESS: {\n      draft.imagePaths = action.data;\n      draft.uploadImagesLoading = false;\n      draft.uploadImagesDone = true;\n      break;\n    }\n    case UPLOAD_IMAGES_FAILURE:\n      draft.uploadImagesLoading = false;\n      draft.uploadImagesError = action.error;\n      break;\n    case LIKE_POST_REQUEST:\n      draft.likePostLoading = true;\n      draft.likePostDone = false;\n      draft.likePostError = null;\n      break;\n    case LIKE_POST_SUCCESS: {\n      const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\n      post.Likers.push({ id: action.data.UserId });\n      draft.likePostLoading = false;\n      draft.likePostDone = true;\n      break;\n    }\n    case LIKE_POST_FAILURE:\n      draft.likePostLoading = false;\n      draft.likePostError = action.error;\n      break;\n    case UNLIKE_POST_REQUEST:\n      draft.unlikePostLoading = true;\n      draft.unlikePostDone = false;\n      draft.unlikePostError = null;\n      break;\n    case UNLIKE_POST_SUCCESS: {\n      const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\n      post.Likers = post.Likers.filter((v) => v.id !== action.data.UserId);\n      draft.unlikePostLoading = false;\n      draft.unlikePostDone = true;\n      break;\n    }\n    case UNLIKE_POST_FAILURE:\n      draft.unlikePostLoading = false;\n      draft.unlikePostError = action.error;\n      break;\n    case LOAD_POSTS_REQUEST:\n      draft.loadPostsLoading = true;\n      draft.loadPostsDone = false;\n      draft.loadPostsError = null;\n      break;\n    case LOAD_POSTS_SUCCESS:\n      draft.loadPostsLoading = false;\n      draft.loadPostsDone = true;\n      draft.mainPosts = draft.mainPosts.concat(action.data);\n      draft.hasMorePosts = action.data.length === 10;\n      break;\n    case LOAD_POSTS_FAILURE:\n      draft.loadPostsLoading = false;\n      draft.loadPostsError = action.error;\n      break;\n    case ADD_POST_REQUEST:\n      draft.addPostLoading = true;\n      draft.addPostDone = false;\n      draft.addPostError = null;\n      break;\n    case ADD_POST_SUCCESS:\n      draft.addPostLoading = false;\n      draft.addPostDone = true;\n      draft.mainPosts.unshift(action.data);\n      draft.imagePaths = [];\n      break;\n    case ADD_POST_FAILURE:\n      draft.addPostLoading = false;\n      draft.addPostError = action.error;\n      break;\n    case REMOVE_POST_REQUEST:\n      draft.removePostLoading = true;\n      draft.removePostDone = false;\n      draft.removePostError = null;\n      break;\n    case REMOVE_POST_SUCCESS:\n      draft.removePostLoading = false;\n      draft.removePostDone = true;\n      draft.mainPosts = draft.mainPosts.filter((v) => v.id !== action.data.PostId);\n      break;\n    case REMOVE_POST_FAILURE:\n      draft.removePostLoading = false;\n      draft.removePostError = action.error;\n      break;\n    case ADD_COMMENT_REQUEST:\n      draft.addCommentLoading = true;\n      draft.addCommentDone = false;\n      draft.addCommentError = null;\n      break;\n    case ADD_COMMENT_SUCCESS: {\n      const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\n      post.Comments.unshift(action.data);\n      draft.addCommentLoading = false;\n      draft.addCommentDone = true;\n      break;\n      // const postIndex = state.mainPosts.findIndex((v) => v.id === action.data.postId);\n      // const post = { ...state.mainPosts[postIndex] };\n      // post.Comments = [dummyComment(action.data.content), ...post.Comments];\n      // const mainPosts = [...state.mainPosts];\n      // mainPosts[postIndex] = post;\n      // return {\n      //   ...state,\n      //   mainPosts,\n      //   addCommentLoading: false,\n      //   addCommentDone: true,\n      // };\n    }\n    case ADD_COMMENT_FAILURE:\n      draft.addCommentLoading = false;\n      draft.addCommentError = action.error;\n      break;\n    default:\n      break;\n  }\n});\n\nexport default reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}