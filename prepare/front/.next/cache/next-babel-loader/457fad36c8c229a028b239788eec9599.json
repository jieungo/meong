{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/gojieun/Desktop/meong/prepare/front/components/PostCard.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Card, Popover, List, Comment, Avatar } from 'antd';\nimport { CommentOutlined, EllipsisOutlined } from '@ant-design/icons';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PostImages from './PostImages';\nimport CommentForm from './CommentForm';\nimport PostCardContent from './PostCardContent';\nimport { LOAD_POST_REQUEST, REMOVE_POST_REQUEST } from '../reducers/post';\nimport FollowButton from './FollowButton';\nimport LikeButton from './LikeButton';\nimport { LOAD_USER_REQUEST } from '../reducers/user';\n\nvar PostCard = function PostCard(_ref) {\n  _s();\n\n  var _post$User;\n\n  var post = _ref.post;\n  // const id = user?.id -> user && user.id; 옵셔널 체이닝 연산자\n  var id = useSelector(function (state) {\n    var _state$user$user;\n\n    return (_state$user$user = state.user.user) === null || _state$user$user === void 0 ? void 0 : _state$user$user.id;\n  }); // 위의 두 줄을 이렇게 합쳐도 가능\n\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      commentOpend = _useState[0],\n      setCommentOpend = _useState[1];\n\n  var onToggleComment = useCallback(function () {\n    setCommentOpend(function (prev) {\n      return !prev;\n    });\n  });\n  useEffect(function () {\n    dispatch({\n      type: LOAD_USER_REQUEST\n    });\n    dispatch({\n      type: LOAD_POST_REQUEST\n    });\n  }, []);\n  var onRemovePost = useCallback(function () {\n    dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id\n    }, []);\n  });\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, __jsx(Card, {\n    cover: post.Images[0] && __jsx(PostImages, {\n      images: post.Images,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 42\n      }\n    }),\n    actions: [__jsx(CommentOutlined, {\n      key: \"comment\",\n      onClick: onToggleComment,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    }), __jsx(LikeButton, {\n      key: \"like\",\n      post: post,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    }), __jsx(Popover, {\n      key: \"more\",\n      content: __jsx(Button.Group, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }\n      }, id && ((_post$User = post.User) === null || _post$User === void 0 ? void 0 : _post$User.id) === id ? __jsx(React.Fragment, null, __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 33\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        type: \"danger\",\n        onClick: onRemovePost,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 33\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 33\n        }\n      }, \"\\uC2E0\\uACE0\")),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }))],\n    extra: id && __jsx(FollowButton, {\n      post: post,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 30\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 29\n      }\n    }, post.User.nickname[0]),\n    title: post.User.nickname,\n    description: __jsx(PostCardContent, {\n      postData: post.content,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 34\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  })), commentOpend && __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, __jsx(CommentForm, {\n    post: post,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }), __jsx(List, {\n    header: \"\".concat(post.Comment.length, \"\\uAC1C\\uC758 \\uB313\\uAE00\"),\n    itemLayout: \"horizontal\",\n    dataSource: post.Comment,\n    renderItem: function renderItem(item) {\n      return __jsx(\"li\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 29\n        }\n      }, __jsx(Comment, {\n        author: item.User.nickname,\n        avatar: __jsx(Avatar, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 45\n          }\n        }, item.User.nickname[0]),\n        content: item.content,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 33\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  })));\n};\n\n_s(PostCard, \"rMXyZdacQxD3Sp0zOQky+icLL7Y=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    //shape를 통해 더 구체적으로 작성이 가능하다\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comment: PropTypes.arrayOf(PropTypes.object),\n    // 객체들의 배열\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","PropTypes","Button","Card","Popover","List","Comment","Avatar","CommentOutlined","EllipsisOutlined","useDispatch","useSelector","PostImages","CommentForm","PostCardContent","LOAD_POST_REQUEST","REMOVE_POST_REQUEST","FollowButton","LikeButton","LOAD_USER_REQUEST","PostCard","post","id","state","user","dispatch","commentOpend","setCommentOpend","onToggleComment","prev","type","onRemovePost","data","Images","User","nickname","content","length","item","propTypes","shape","number","object","string","createdAt","arrayOf","isRequired"],"sources":["/Users/gojieun/Desktop/meong/prepare/front/components/PostCard.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {Button, Card, Popover, List, Comment, Avatar} from 'antd';\nimport {CommentOutlined, EllipsisOutlined, } from '@ant-design/icons';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PostImages from './PostImages';\nimport CommentForm from './CommentForm';\nimport PostCardContent from './PostCardContent';\nimport { LOAD_POST_REQUEST, REMOVE_POST_REQUEST } from '../reducers/post';\nimport FollowButton from './FollowButton';\nimport LikeButton from './LikeButton';\nimport { LOAD_USER_REQUEST } from '../reducers/user';\n\nconst PostCard = ({post}) => {\n    // const id = user?.id -> user && user.id; 옵셔널 체이닝 연산자\n    const id = useSelector((state) => state.user.user?.id);\n    // 위의 두 줄을 이렇게 합쳐도 가능\n    const dispatch = useDispatch();\n    const [commentOpend, setCommentOpend] = useState(false);\n    const onToggleComment = useCallback(() => {\n        setCommentOpend((prev) => !prev);\n    })\n\n    useEffect(() => {\n      dispatch({\n          type: LOAD_USER_REQUEST,\n      });\n      dispatch({\n          type: LOAD_POST_REQUEST,\n      });\n      }, []);\n      \n\n    const onRemovePost = useCallback(() => {\n        dispatch({\n            type: REMOVE_POST_REQUEST,\n            data: post.id,\n        },[]);\n    })\n\n    return (\n        <div>\n            <Card\n                cover={post.Images[0] && <PostImages images={post.Images} />}\n                actions={[\n                    <CommentOutlined key=\"comment\" onClick={onToggleComment}/>,\n                    <LikeButton key=\"like\" post={post}/>,\n                    <Popover key=\"more\" content={(\n                        <Button.Group>\n                            {id && post.User?.id === id ? (\n                            <>\n                                <Button>수정</Button>\n                                <Button type='danger' onClick={onRemovePost}>삭제</Button>\n                            </>\n                            ) : <Button>신고</Button> }\n                        </Button.Group>\n                    )}>\n                    <EllipsisOutlined />\n                    </Popover>\n                ]}    \n                extra={id && <FollowButton post={post} />}\n                >\n                <Card.Meta \n                    avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\n                    title={post.User.nickname}\n                    description={<PostCardContent postData={post.content} />}\n                />\n            </Card>\n            {commentOpend && (\n                <div>\n                    <CommentForm post={post}/>\n                    <List\n                        header={`${post.Comment.length}개의 댓글`}\n                        itemLayout='horizontal'\n                        dataSource={post.Comment}\n                        renderItem={(item) => (\n                            <li>\n                                <Comment\n                                    author={item.User.nickname}\n                                    avatar={<Avatar>{item.User.nickname[0]}</Avatar>}\n                                    content={item.content}\n                                />\n                            </li>\n                        )}\n                    />\n                </div> )}\n        </div>\n    );\n};\n\nPostCard.propTypes = {\n    post: PropTypes.shape({ //shape를 통해 더 구체적으로 작성이 가능하다\n        id: PropTypes.number,\n        User: PropTypes.object,\n        content: PropTypes.string,\n        createdAt: PropTypes.object,\n        Comment: PropTypes.arrayOf(PropTypes.object), // 객체들의 배열\n        Images: PropTypes.arrayOf(PropTypes.object),\n    }).isRequired,\n}\n\nexport default PostCard;"],"mappings":"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"},"metadata":{},"sourceType":"module"}