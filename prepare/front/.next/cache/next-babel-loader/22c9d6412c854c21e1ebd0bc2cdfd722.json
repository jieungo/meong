{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _templateObject2,\n    _this = this,\n    _jsxFileName = \"/Users/gojieun/Desktop/meong/prepare/front/components/PostForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect, useRef } from 'react';\nimport { Button, Form, Input } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { DownloadOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { ADD_POST_REQUEST, UPLOAD_IMAGES_REQUEST, REMOVE_IMAGE } from '../reducers/post';\nimport useInput from '../hooks/useInput';\nvar SubmitBtn = styled(Button)(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    background-color: #FFF3D4;\\n    color: #857171;\\n    border: none;\\n    max-width: 600px;\\n    margin: 20px auto;\\n    width: 100%;\\n    margin-bottom: 40px;\\n    height: 40px;\\n    font-weight: 500;\\n\\n    &:hover {\\n        background-color: #857171;\\n        border: 1px solid #857171;\\n        color: white;\\n    }\\n\"])));\n_c = SubmitBtn;\nvar FileUploadWrapper = styled.div(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n\\ndisplay: flex;\\n\\n#file[type=\\\"file\\\"] {\\n\\tdisplay: none;\\n}\\n\\n.label-holder {\\n  margin: 1em;\\n  display: flex;\\n  width: 50%;\\n  height: 30vh;\\n}\\n\\n.label{\\n  display: grid;\\n  place-items: center;\\n  font-size: 1rem;\\n  cursor: pointer;\\n  border: 2px dashed gray;\\n  border-radius: 5px;\\n  width: 100%;\\n  padding: 10vh 0;\\n}\\n\\n.label > span {\\n    display: flex;\\n    flex-direction: column;\\n    font-weight: 500;\\n    font-size: 1.1rem;\\n    color: gray;\\n}\\n\\n.result{\\n  width: 100%;\\n  margin-top:1rem;\\n  display: flex;\\n  flex-wrap: wrap;\\n  justify-content: left;\\n}\\n\\nimg{\\n  width: 25%;\\n  height: 150px;\\n  object-fit: fill;\\n  padding: 0.5rem;\\n}\\n\"])));\n_c2 = FileUploadWrapper;\n\nvar PostForm = function PostForm() {\n  _s();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      imagePaths = _useSelector.imagePaths,\n      addPostDone = _useSelector.addPostDone;\n\n  var dispatch = useDispatch();\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 3),\n      text = _useInput2[0],\n      onChangeText = _useInput2[1],\n      setText = _useInput2[2];\n\n  useEffect(function () {\n    if (addPostDone) {\n      setText('');\n    }\n  }, [addPostDone]);\n  var onSubmit = useCallback(function () {\n    if (!text || !text.trim()) {\n      return alert('게시글을 작성하세요.');\n    }\n\n    var formData = new FormData();\n    imagePaths.forEach(function (p) {\n      formData.append('image', p);\n    });\n    formData.append('content', text);\n    return dispatch({\n      type: ADD_POST_REQUEST,\n      data: formData\n    });\n  }, [text, imagePaths]);\n  var imageInput = useRef();\n  var onClickImageUpload = useCallback(function () {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  var onChangeImages = useCallback(function (e) {\n    console.log('images', e.target.files);\n    var imageFormData = new FormData();\n    [].forEach.call(e.target.files, function (f) {\n      imageFormData.append('image', f);\n    });\n    dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imageFormData\n    });\n  }, []);\n  var onRemoveImage = useCallback(function (index) {\n    return function () {\n      dispatch({\n        type: REMOVE_IMAGE,\n        data: index\n      });\n    };\n  }, []);\n  return __jsx(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 5\n    }\n  }, __jsx(FileUploadWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    name: \"image\",\n    multiple: true,\n    hidden: true,\n    ref: imageInput,\n    onChange: onChangeImages,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: \"label-holder\",\n    onClick: onClickImageUpload,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"file\",\n    className: \"label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, __jsx(DownloadOutlined, {\n    style: {\n      fontSize: '30px',\n      marginBottom: '10px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 21\n    }\n  }), \"Upload Images\"))), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }, imagePaths.map(function (v, i) {\n    return __jsx(\"div\", {\n      key: v,\n      style: {\n        display: 'inline-block'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }\n    }, __jsx(\"img\", {\n      src: \"http://localhost:3065/\".concat(v),\n      style: {\n        width: '200px'\n      },\n      alt: v,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }\n    }), __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }\n    }, __jsx(Button, {\n      onClick: onRemoveImage(i),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 15\n      }\n    }, \"\\uC81C\\uAC70\")));\n  }))), __jsx(Input.TextArea, {\n    value: text,\n    onChange: onChangeText,\n    maxLength: 140,\n    placeholder: \"\\uBC18\\uB824\\uB3D9\\uBB3C\\uC5D0 \\uB300\\uD55C \\uC790\\uC720\\uB85C\\uC6B4 \\uAE00\\uC744 \\uC791\\uC131\\uD574\\uC8FC\\uC138\\uC694\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }), __jsx(SubmitBtn, {\n    htmlType: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 5\n    }\n  }, \"\\uC5C5\\uB85C\\uB4DC\"));\n};\n\n_s(PostForm, \"uNSEbxyZ52Mayt0tr31J38502f4=\", false, function () {\n  return [useSelector, useDispatch, useInput];\n});\n\n_c3 = PostForm;\nexport default PostForm;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"SubmitBtn\");\n$RefreshReg$(_c2, \"FileUploadWrapper\");\n$RefreshReg$(_c3, \"PostForm\");","map":{"version":3,"names":["React","useCallback","useEffect","useRef","Button","Form","Input","useDispatch","useSelector","DownloadOutlined","styled","ADD_POST_REQUEST","UPLOAD_IMAGES_REQUEST","REMOVE_IMAGE","useInput","SubmitBtn","FileUploadWrapper","div","PostForm","state","post","imagePaths","addPostDone","dispatch","text","onChangeText","setText","onSubmit","trim","alert","formData","FormData","forEach","p","append","type","data","imageInput","onClickImageUpload","current","click","onChangeImages","e","console","log","target","files","imageFormData","call","f","onRemoveImage","index","margin","fontSize","marginBottom","map","v","i","display","width"],"sources":["/Users/gojieun/Desktop/meong/prepare/front/components/PostForm.js"],"sourcesContent":["import React, { useCallback, useEffect, useRef } from 'react';\nimport { Button, Form, Input } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {DownloadOutlined} from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { ADD_POST_REQUEST, UPLOAD_IMAGES_REQUEST, REMOVE_IMAGE } from '../reducers/post';\nimport useInput from '../hooks/useInput';\n\nconst SubmitBtn = styled(Button)`\n    background-color: #FFF3D4;\n    color: #857171;\n    border: none;\n    max-width: 600px;\n    margin: 20px auto;\n    width: 100%;\n    margin-bottom: 40px;\n    height: 40px;\n    font-weight: 500;\n\n    &:hover {\n        background-color: #857171;\n        border: 1px solid #857171;\n        color: white;\n    }\n`;\n\nconst FileUploadWrapper = styled.div`\n\ndisplay: flex;\n\n#file[type=\"file\"] {\n\tdisplay: none;\n}\n\n.label-holder {\n  margin: 1em;\n  display: flex;\n  width: 50%;\n  height: 30vh;\n}\n\n.label{\n  display: grid;\n  place-items: center;\n  font-size: 1rem;\n  cursor: pointer;\n  border: 2px dashed gray;\n  border-radius: 5px;\n  width: 100%;\n  padding: 10vh 0;\n}\n\n.label > span {\n    display: flex;\n    flex-direction: column;\n    font-weight: 500;\n    font-size: 1.1rem;\n    color: gray;\n}\n\n.result{\n  width: 100%;\n  margin-top:1rem;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: left;\n}\n\nimg{\n  width: 25%;\n  height: 150px;\n  object-fit: fill;\n  padding: 0.5rem;\n}\n`;\n\n\nconst PostForm = () => {\n  const { imagePaths, addPostDone } = useSelector((state) => state.post);\n  const dispatch = useDispatch();\n  const [text, onChangeText, setText] = useInput('');\n\n  useEffect(() => {\n    if (addPostDone) {\n      setText('');\n    }\n  }, [addPostDone]);\n\n  const onSubmit = useCallback(() => {\n    if (!text || !text.trim()) {\n      return alert('게시글을 작성하세요.');\n    }\n    const formData = new FormData();\n    imagePaths.forEach((p) => {\n      formData.append('image', p);\n    });\n    formData.append('content', text);\n    return dispatch({\n      type: ADD_POST_REQUEST,\n      data: formData,\n    });\n  }, [text, imagePaths]);\n\n  const imageInput = useRef();\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n\n  const onChangeImages = useCallback((e) => {\n    console.log('images', e.target.files);\n    const imageFormData = new FormData();\n    [].forEach.call(e.target.files, (f) => {\n      imageFormData.append('image', f);\n    });\n    dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imageFormData,\n    });\n  }, []);\n\n  const onRemoveImage = useCallback((index) => () => {\n    dispatch({\n      type: REMOVE_IMAGE,\n      data: index,\n    });\n  }, []);\n\n  return (\n    <Form style={{ margin: '10px 0 20px' }} encType=\"multipart/form-data\" onFinish={onSubmit}>\n      <FileUploadWrapper>\n        <input type=\"file\" name=\"image\" multiple hidden ref={imageInput} onChange={onChangeImages} />\n        <div className=\"label-holder\" onClick={onClickImageUpload}>\n            <label htmlFor='file' className='label'>\n                <span>\n                    <DownloadOutlined style={{fontSize: '30px', marginBottom: '10px'}}/>\n                    Upload Images\n                </span>\n            </label>\n        </div>\n      <div>\n        {imagePaths.map((v, i) => (\n          <div key={v} style={{ display: 'inline-block' }}>\n            <img src={`http://localhost:3065/${v}`} style={{ width: '200px' }} alt={v} />\n            <div>\n              <Button onClick={onRemoveImage(i)}>제거</Button>\n            </div>\n          </div>\n        ))}\n      </div>\n      </FileUploadWrapper>\n      <Input.TextArea\n        value={text}\n        onChange={onChangeText}\n        maxLength={140}\n        placeholder=\"반려동물에 대한 자유로운 글을 작성해주세요\"\n      />\n    <SubmitBtn htmlType=\"submit\">업로드</SubmitBtn>\n    </Form>\n  );\n};\n\nexport default PostForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}