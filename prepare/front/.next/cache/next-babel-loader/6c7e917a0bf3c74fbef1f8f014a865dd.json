{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\nimport { END } from 'redux-saga';\nimport axios from 'axios';\nimport { LOAD_POST_REQUEST } from '../../reducers/post';\nimport wrapper from '../../store/configureStore';\nimport PostCard from '../../components/PostCard';\nimport AppLayout from '../../components/AppLayout';\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\n\nconst Post = () => {\n  const {\n    singlePost\n  } = useSelector(state => state.post);\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  return __jsx(AppLayout, null, __jsx(Head, null, __jsx(\"title\", null, singlePost.User.nickname, \"\\uB2D8\\uC758 \\uAE00\"), __jsx(\"meta\", {\n    name: \"description\",\n    content: singlePost.content\n  }), __jsx(\"meta\", {\n    property: \"og:title\",\n    content: `${singlePost.User.nickname}님의 게시글`\n  }), __jsx(\"meta\", {\n    property: \"og:description\",\n    content: singlePost.content\n  }), __jsx(\"meta\", {\n    property: \"og:image\",\n    content: singlePost.Images[0] ? singlePost.Images[0].src : 'https://nodebird.com/favicon.ico'\n  }), __jsx(\"meta\", {\n    property: \"og:url\",\n    content: `https://nodebird.com/post/${id}`\n  })), __jsx(PostCard, {\n    post: singlePost\n  }));\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  console.log(context);\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch({\n    type: LOAD_POST_REQUEST,\n    data: context.params.id\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n  return {\n    props: {}\n  };\n});\nexport default Post;","map":{"version":3,"names":["React","useSelector","Head","useRouter","END","axios","LOAD_POST_REQUEST","wrapper","PostCard","AppLayout","LOAD_MY_INFO_REQUEST","Post","singlePost","state","post","router","id","query","User","nickname","content","Images","src","getServerSideProps","context","cookie","req","headers","console","log","defaults","Cookie","store","dispatch","type","data","params","sagaTask","toPromise","props"],"sources":["/Users/gojieun/Desktop/meong/prepare/front/pages/post/[id].js"],"sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\nimport { END } from 'redux-saga';\n\nimport axios from 'axios';\nimport { LOAD_POST_REQUEST } from '../../reducers/post';\nimport wrapper from '../../store/configureStore';\nimport PostCard from '../../components/PostCard';\nimport AppLayout from '../../components/AppLayout';\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\n\nconst Post = () => {\n  const { singlePost } = useSelector((state) => state.post);\n  const router = useRouter();\n  const { id } = router.query;\n\n  return (\n    <AppLayout>\n      <Head>\n        <title>\n          {singlePost.User.nickname}\n          님의 글\n        </title>\n        <meta name=\"description\" content={singlePost.content} />\n        <meta property=\"og:title\" content={`${singlePost.User.nickname}님의 게시글`} />\n        <meta property=\"og:description\" content={singlePost.content} />\n        <meta property=\"og:image\" content={singlePost.Images[0] ? singlePost.Images[0].src : 'https://nodebird.com/favicon.ico'} />\n        <meta property=\"og:url\" content={`https://nodebird.com/post/${id}`} />\n      </Head>\n      <PostCard post={singlePost} />\n    </AppLayout>\n  );\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  console.log(context);\n  axios.defaults.headers.Cookie = '';\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST,\n  });\n  context.store.dispatch({\n    type: LOAD_POST_REQUEST,\n    data: context.params.id,\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n  return { props: {} };\n});\n\nexport default Post;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,GAAT,QAAoB,YAApB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,SAASC,oBAAT,QAAqC,qBAArC;;AAEA,MAAMC,IAAI,GAAG,MAAM;EACjB,MAAM;IAAEC;EAAF,IAAiBX,WAAW,CAAEY,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAlC;EACA,MAAMC,MAAM,GAAGZ,SAAS,EAAxB;EACA,MAAM;IAAEa;EAAF,IAASD,MAAM,CAACE,KAAtB;EAEA,OACE,MAAC,SAAD,QACE,MAAC,IAAD,QACE,qBACGL,UAAU,CAACM,IAAX,CAAgBC,QADnB,wBADF,EAKE;IAAM,IAAI,EAAC,aAAX;IAAyB,OAAO,EAAEP,UAAU,CAACQ;EAA7C,EALF,EAME;IAAM,QAAQ,EAAC,UAAf;IAA0B,OAAO,EAAG,GAAER,UAAU,CAACM,IAAX,CAAgBC,QAAS;EAA/D,EANF,EAOE;IAAM,QAAQ,EAAC,gBAAf;IAAgC,OAAO,EAAEP,UAAU,CAACQ;EAApD,EAPF,EAQE;IAAM,QAAQ,EAAC,UAAf;IAA0B,OAAO,EAAER,UAAU,CAACS,MAAX,CAAkB,CAAlB,IAAuBT,UAAU,CAACS,MAAX,CAAkB,CAAlB,EAAqBC,GAA5C,GAAkD;EAArF,EARF,EASE;IAAM,QAAQ,EAAC,QAAf;IAAwB,OAAO,EAAG,6BAA4BN,EAAG;EAAjE,EATF,CADF,EAYE,MAAC,QAAD;IAAU,IAAI,EAAEJ;EAAhB,EAZF,CADF;AAgBD,CArBD;;AAuBA,OAAO,MAAMW,kBAAkB,GAAGhB,OAAO,CAACgB,kBAAR,CAA2B,MAAOC,OAAP,IAAmB;EAC9E,MAAMC,MAAM,GAAGD,OAAO,CAACE,GAAR,GAAcF,OAAO,CAACE,GAAR,CAAYC,OAAZ,CAAoBF,MAAlC,GAA2C,EAA1D;EACAG,OAAO,CAACC,GAAR,CAAYL,OAAZ;EACAnB,KAAK,CAACyB,QAAN,CAAeH,OAAf,CAAuBI,MAAvB,GAAgC,EAAhC;;EACA,IAAIP,OAAO,CAACE,GAAR,IAAeD,MAAnB,EAA2B;IACzBpB,KAAK,CAACyB,QAAN,CAAeH,OAAf,CAAuBI,MAAvB,GAAgCN,MAAhC;EACD;;EACDD,OAAO,CAACQ,KAAR,CAAcC,QAAd,CAAuB;IACrBC,IAAI,EAAExB;EADe,CAAvB;EAGAc,OAAO,CAACQ,KAAR,CAAcC,QAAd,CAAuB;IACrBC,IAAI,EAAE5B,iBADe;IAErB6B,IAAI,EAAEX,OAAO,CAACY,MAAR,CAAepB;EAFA,CAAvB;EAIAQ,OAAO,CAACQ,KAAR,CAAcC,QAAd,CAAuB7B,GAAvB;EACA,MAAMoB,OAAO,CAACQ,KAAR,CAAcK,QAAd,CAAuBC,SAAvB,EAAN;EACA,OAAO;IAAEC,KAAK,EAAE;EAAT,CAAP;AACD,CAjBiC,CAA3B;AAmBP,eAAe5B,IAAf"},"metadata":{},"sourceType":"module"}