{"version":3,"sources":["webpack://_N_E/./node_modules/@ant-design/icons-svg/es/asn/DownloadOutlined.js","webpack://_N_E/./node_modules/@ant-design/icons/es/icons/DownloadOutlined.js","webpack://_N_E/./components/PostForm.js","webpack://_N_E/./pages/index.js","webpack://_N_E/./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js"],"names":["props","ref","AntdIcon","icon","displayName","SubmitBtn","styled","Button","FileUploadWrapper","div","SelectedImg","img","FormWrapper","Form","PostForm","useSelector","state","post","imagePaths","addPostDone","dispatch","useDispatch","useInput","text","onChangeText","setText","useEffect","onSubmit","useCallback","trim","alert","formData","FormData","forEach","p","append","type","ADD_POST_REQUEST","data","imageInput","useRef","onClickImageUpload","current","click","onChangeImages","e","console","log","target","files","imageFormData","call","f","UPLOAD_IMAGES_REQUEST","onRemoveImage","index","REMOVE_IMAGE","encType","onFinish","name","multiple","hidden","onChange","className","onClick","htmlFor","style","fontSize","marginBottom","map","v","i","key","position","src","backUrl","alt","width","heigth","zIndex","top","right","TextArea","value","maxLength","placeholder","border","htmlType","Home","me","user","mainPosts","hasMorePosts","loadPostsLoading","onScroll","window","pageYOffset","document","documentElement","clientHeight","scrollHeight","lastId","length","id","LOAD_POSTS_REQUEST","addEventListener","removeEventListener","AppLayout","PostCard","__NEXT_P","push"],"mappings":"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","file":"static/chunks/pages/index-0ca17e5510861b415ff1.js","sourcesContent":["// This icon file is generated automatically.\nvar DownloadOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M505.7 661a8 8 0 0012.6 0l112-141.7c4.1-5.2.4-12.9-6.3-12.9h-74.1V168c0-4.4-3.6-8-8-8h-60c-4.4 0-8 3.6-8 8v338.3H400c-6.7 0-10.4 7.7-6.3 12.9l112 141.8zM878 626h-60c-4.4 0-8 3.6-8 8v154H214V634c0-4.4-3.6-8-8-8h-60c-4.4 0-8 3.6-8 8v198c0 17.7 14.3 32 32 32h684c17.7 0 32-14.3 32-32V634c0-4.4-3.6-8-8-8z\" } }] }, \"name\": \"download\", \"theme\": \"outlined\" };\nexport default DownloadOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport DownloadOutlinedSvg from \"@ant-design/icons-svg/es/asn/DownloadOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar DownloadOutlined = function DownloadOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: DownloadOutlinedSvg\n  }));\n};\n\nDownloadOutlined.displayName = 'DownloadOutlined';\nexport default /*#__PURE__*/React.forwardRef(DownloadOutlined);","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { Button, Form, Input } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {DownloadOutlined} from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { ADD_POST_REQUEST, UPLOAD_IMAGES_REQUEST, REMOVE_IMAGE } from '../reducers/post';\nimport useInput from '../hooks/useInput';\nimport { backUrl } from '../config/config';\n\nconst SubmitBtn = styled(Button)`\n    background-color: #FFF3D4;\n    color: #857171;\n    border: none;\n    border-radius: 20px;\n    width: 20%;\n    height: 40px;\n    font-weight: 500;\n    position: absolute;\n    right: 15px;\n    bottom: 15px;\n\n    &:hover {\n        background-color: #857171;\n        border: 1px solid #857171;\n        color: white;\n    }\n`;\n\nconst FileUploadWrapper = styled.div`\n\ndisplay: flex;\nmargin-bottom: 20px;\n\n#file[type=\"file\"] {\n\tdisplay: none;\n}\n\n.label-holder {\n    display: flex;\n    margin: 1em auto;\n    width: 50%;\n    height: 20vh;\n}\n\n.label{\n  display: grid;\n  place-items: center;\n  font-size: 1rem;\n  cursor: pointer;\n  border-radius: 5px;\n  width: 100%;\n  padding: 5vh 0;\n}\n\n.label > span {\n    display: flex;\n    flex-direction: column;\n    font-weight: 500;\n    font-size: 1.1rem;\n    color: gray;\n}\n\n.result{\n  width: 100%;\n  margin-top:1rem;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: left;\n}\n`;\n\nconst SelectedImg = styled.img`\ndisplay: flex;\nalign-items: center;\njustify-content: center;\nwidth: 100%;\n`;\n\nconst FormWrapper = styled(Form)`\n    margin: 0 auto;\n    background-color: white;\n    height: 45vh;\n    position: relative;\n    border-radius: 20px;\n    box-shadow: grey 1px 1px 8px -7px;\n`;\n\n\nconst PostForm = () => {\n  const { imagePaths, addPostDone } = useSelector((state) => state.post);\n  const dispatch = useDispatch();\n  const [text, onChangeText, setText] = useInput('');\n\n  useEffect(() => {\n    if (addPostDone) {\n      setText('');\n    }\n  }, [addPostDone]);\n\n  const onSubmit = useCallback(() => {\n    if (!text || !text.trim()) {\n      return alert('게시글을 작성하세요.');\n    }\n    const formData = new FormData();\n    imagePaths.forEach((p) => {\n      formData.append('image', p);\n    });\n    formData.append('content', text);\n    return dispatch({\n      type: ADD_POST_REQUEST,\n      data: formData,\n    });\n  }, [text, imagePaths]);\n\n  const imageInput = useRef();\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n   \n  }, [imageInput.current]);\n\n  const onChangeImages = useCallback((e) => {\n    console.log('images', e.target.files);\n    const imageFormData = new FormData();\n    [].forEach.call(e.target.files, (f) => {\n      imageFormData.append('image', f);\n    });\n    dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imageFormData,\n    });\n  }, []);\n\n  const onRemoveImage = useCallback((index) => () => {\n    dispatch({\n      type: REMOVE_IMAGE,\n      data: index,\n    });\n  }, []);\n\n  return (\n    <FormWrapper encType=\"multipart/form-data\" onFinish={onSubmit}>\n        <FileUploadWrapper>\n            <input type=\"file\" name=\"image\" multiple hidden ref={imageInput} onChange={onChangeImages} />\n            <div className=\"label-holder\" onClick={onClickImageUpload}>\n                <label htmlFor='file' className='label'>\n                    <span>\n                        <DownloadOutlined style={{fontSize: '30px', marginBottom: '10px'}}/>\n                        Upload Images\n                    </span>\n                </label>\n            </div>\n      <div>\n        {imagePaths.map((v, i) => (\n          <div key={v} style={{position: 'relative'}}>\n            <SelectedImg src={`${backUrl}/${v}`} alt={v} style={{width: '20vw', heigth: '20vh'}} />\n            <Button onClick={onRemoveImage(i)} style={{position: 'absolute', zIndex: 1, top: 0, right: 0}}>X</Button>\n          </div>\n        ))}\n      </div>\n        </FileUploadWrapper>\n      <Input.TextArea\n        value={text}\n        onChange={onChangeText}\n        maxLength={300}\n        placeholder=\"반려동물에 대한 자유로운 글을 작성해주세요\"\n        style={{border: 'none'}}\n      />\n    <SubmitBtn htmlType=\"submit\">업로드</SubmitBtn>\n    </FormWrapper>\n  );\n};\n\nexport default PostForm;","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {END} from 'redux-saga';\nimport AppLayout from '../components/AppLayout';\nimport PostForm from '../components/PostForm';\nimport PostCard from '../components/PostCard';\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user';\nimport wrapper from '../store/configureStore';\nimport axios from 'axios';\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const { me } = useSelector((state) => state.user);\n  const { mainPosts, hasMorePosts, loadPostsLoading} = useSelector((state) => state.post);\n\n  useEffect(() => {\n    function onScroll() {\n      if (window.pageYOffset + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePosts && !loadPostsLoading) {\n          const lastId = mainPosts[mainPosts.length - 1]?.id;\n          dispatch({\n            type: LOAD_POSTS_REQUEST,\n            lastId,\n          });\n        }\n      }\n    }\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [hasMorePosts, loadPostsLoading, mainPosts]);\n\n  return (\n    <AppLayout>\n      {me && <PostForm />}\n      {mainPosts.map((post) => <PostCard key={post.id} post={post} />)}\n    </AppLayout>\n  );\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\n  console.log('getServerSideProps start');\n  console.log(context.req.headers);\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST,\n  });\n  context.store.dispatch({\n    type: LOAD_POSTS_REQUEST,\n  });\n  context.store.dispatch(END);\n  console.log('getServerSideProps end');\n  await context.store.sagaTask.toPromise();\n});\n\nexport default Home;","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/\",\n      function () {\n        return require(\"private-next-pages/index.js\");\n      }\n    ]);\n  "],"sourceRoot":""}